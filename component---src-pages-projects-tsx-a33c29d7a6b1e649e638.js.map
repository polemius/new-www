{"version":3,"sources":["webpack:///./src/pages/projects.module.scss","webpack:///./src/components/subcomponents/ProjectCard.tsx","webpack:///./src/pages/projects.tsx","webpack:///./src/components/shared/index.styled.ts","webpack:///./src/components/shared/index.tsx","webpack:///./src/models/creator.ts","webpack:///./src/styles/variables.ts","webpack:///./src/components/subcomponents/ProjectCard.module.scss"],"names":["module","exports","ProjectCard","project","invertTitle","Title","className","classNames","styles","title","Image","imageWrap","src","image","alt","container","href","routeLinks","projects","slug","Fragment","pageQuery","ProjectsPage","data","createProjects","allTags","forEach","tags","tag","includes","push","useState","selectedTags","setSelectedTags","Page","HelmetWrapper","description","info","length","filter","onClick","map","key","selectedTag","selectTag","every","HideTablet","styled","div","display","HideDesktop","Section","section","variables","color","text","device","mobile","SectionBlack","white","TitleBase","SectionTitle","h3","TextTitle","TextRegular","font","family","size","PageDescription","justifyContent","width","paddingTop","paddingBottom","margin","textAlign","maxWidth","padding","Button","MoreButton","disabled","isSubmit","children","Btn","type","to","Styled","createBlogPosts","allMarkdownRemark","edges","node","frontmatter","id","fields","excerpt","published","sort","a","b","order","createAuthors","nodes","pxToRem","px","deviceSize","pagePadding","tablet","navHeight","desktop","primary","black"],"mappings":"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","file":"component---src-pages-projects-tsx-a33c29d7a6b1e649e638.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"projects-module--info--3umGw\",\"filter\":\"projects-module--filter--3quS7\",\"project\":\"projects-module--project--3V3lV\"};","import React from 'react'\nimport classNames from 'classnames'\n\nimport {ProjectModel} from '../../models/gql'\nimport {routeLinks} from '../../config/routing'\n\nimport styles from './ProjectCard.module.scss'\n\ninterface ProjectCardProps {\n    project: ProjectModel\n    invertTitle?: boolean\n}\n\nconst ProjectCard: React.FC<ProjectCardProps> = ({project, invertTitle}) => {\n    const Title = () => (\n        <span className={classNames('is-size-5 has-text-black has-text-weight-bold', styles.title)}>\n            {project.title}\n        </span>\n    )\n\n    const Image = () => (\n        <figure className={classNames('image is-inline-block', styles.imageWrap)}>\n            <img src={project.image} alt={project.title}/>\n        </figure>\n    )\n\n    return (\n        <a className={classNames('card-content', styles.container)} href={`${routeLinks.projects}/${project.slug}`}>\n            {invertTitle\n                ? (\n                    <React.Fragment>\n                        <Image />\n                        <Title />\n                    </React.Fragment>\n                )\n                : (\n                    <React.Fragment>\n                        <Title />\n                        <Image />\n                    </React.Fragment>\n                )\n            }\n        </a>\n    )\n}\n\nexport default ProjectCard\n","import {graphql} from 'gatsby'\nimport React, {useState} from 'react'\nimport classNames from 'classnames'\n\nimport {Page} from '../layout/Page'\nimport HelmetWrapper from '../components/subcomponents/HelmetWrapper'\nimport ProjectCard from '../components/subcomponents/ProjectCard'\nimport {Section, PageDescription} from '../components/shared'\nimport {createProjects} from '../models/creator'\nimport {GQLData} from '../models/gql'\n\nimport styles from './projects.module.scss'\n\nconst ProjectsPage: React.FC<{data: GQLData}> = ({data}) => {\n  const projects = createProjects(data)\n\n  const allTags: string[] = []\n  projects.forEach(project => (project.tags || []).forEach(tag => {\n    if (!allTags.includes(tag)) {\n      allTags.push(tag)\n    }\n  }))\n\n  const [selectedTags, setSelectedTags] = useState<string[]>([])\n\n  const selectTag = (tag: string) => {\n    if (selectedTags.includes(tag)) {\n      setSelectedTags(selectedTags.filter(selectedTag => selectedTag !== tag))\n    } else {\n      setSelectedTags([...selectedTags, tag])\n    }\n  }\n\n  return (\n    <Page>\n      <HelmetWrapper\n        title='Projects'\n        description='About our software development projects'\n      />\n      <div className='container'>\n        <Section className={styles.info}>\n          <PageDescription>\n            Since 2012 we have realized many innovative projects among which\n            there are solutions supporting eco-driving, application for\n            sportsmen, POS cash register, system supporting answering calls to\n            emergency numbers and many others.\n          </PageDescription>\n          <div className='buttons'>\n            {allTags.length > 0 && (\n                <div className={classNames('button', styles.filter, {['is-black']: selectedTags.length === 0})}\n                     onClick={() => setSelectedTags([])}>\n                  all\n                </div>\n            )}\n            {allTags.map(tag => (\n                <div key={tag}\n                     className={classNames('button',  styles.filter, {['is-black']: selectedTags.includes(tag)})}\n                     onClick={() => selectTag(tag)}>\n                  {tag}\n                </div>\n            ))}\n          </div>\n        </Section>\n        <Section>\n          <div className='columns is-multiline'>\n            {projects\n                .filter((project) =>\n                    selectedTags.length === 0 ||\n                    (project.tags && selectedTags.every(tag => project.tags.includes(tag)))\n                )\n                .map((project) => (\n                  <div className={classNames('column', styles.project)} key={project.title}>\n                      <ProjectCard project={project} />\n                  </div>\n                ))\n            }\n          </div>\n        </Section>\n      </div>\n    </Page>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(filter: { frontmatter: { layout: { eq: \"project\" } } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            image\n            layout\n            published\n            tags\n            slug\n            order\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default ProjectsPage\n","import styled from \"styled-components\"\nimport variables from \"../../styles/variables\"\n\nexport const HideTablet = styled.div({\n  [\"@media screen and (max-width: 767px)\"]: {\n    display: \"none\",\n  },\n})\n\nexport const HideDesktop = styled.div({\n  [\"@media screen and (min-width: 768px)\"]: {\n    display: \"none\",\n  },\n})\n\nexport const Section = styled.section`\n  padding: 6rem 2rem;\n  color: ${variables.color.text} @media (${variables.device.mobile}) {\n    padding: 2rem 0.5rem 1rem;\n  }\n`\n\nexport const SectionBlack = styled(Section)`\n  background-color: ${variables.color.text};\n  color: ${variables.color.white};\n`\n\nexport const TitleBase = `\n  font-family: \"Montserrat\", sans-serif;\n  font-style: normal;\n  font-weight: bold;\n  letter-spacing: 0;\n  text-align: center;\n`\n\nexport const SectionTitle = styled.h3`\n  ${TitleBase};\n  font-size: 2rem;\n  margin: 1em 0 3rem;\n`\n\nexport const TextTitle = styled.div`\n  ${TitleBase};\n  margin: 1em 0;\n  font-size: 1.2rem;\n`\n\nexport const TextRegular = styled.div`\n  font-family: ${variables.font.text.family};\n  font-size: ${variables.font.text.size};\n  line-height: 2rem;\n`\n\nexport const PageDescription = styled(TextRegular)({\n  display: \"flex\",\n  justifyContent: \"center\",\n  width: \"100%\",\n  paddingTop: \"30px\",\n  paddingBottom: \"10px\",\n  margin: \"0 auto 2rem\",\n\n  textAlign: \"left\",\n  maxWidth: \"955px\",\n  color: variables.color.text,\n  padding: \"10px\",\n})\n\nexport const Button = styled.div`\n  & button {\n    border: 1px solid black;\n    background: white;\n    font-family: \"Montserrat\", sans-serif;\n    font-style: normal;\n    font-weight: bold;\n    letter-spacing: 0;\n    color: #000000;\n    opacity: 1;\n    padding: 0.5rem 2.2rem;\n    font-size: 1rem;\n    cursor: pointer;\n    margin-top: 3rem;\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport * as Styled from './index.styled'\n\ninterface MoreButtonProps {\n  href?: string\n  text?: string\n  isSubmit?: boolean\n  disabled?: boolean\n}\n\nexport const MoreButton: React.FC<MoreButtonProps> = ({ href, text, disabled, isSubmit, children }) => {\n  const Btn = () => <button type={isSubmit ? 'submit' : 'button'} disabled={disabled}>{text || children}</button>\n  return (\n    <Styled.Button className={'column is-full has-text-centered'}>\n      {href\n        ? <Link to={href}><Btn/></Link>\n        : <Btn/>\n      }\n    </Styled.Button>\n  )\n}\n\nexport const HideTablet = Styled.HideTablet\nexport const HideDesktop = Styled.HideDesktop\nexport const PageDescription = Styled.PageDescription\nexport const Section = Styled.Section\nexport const SectionBlack = Styled.SectionBlack\nexport const SectionTitle = Styled.SectionTitle\nexport const TextTitle = Styled.TextTitle\nexport const TextRegular = Styled.TextRegular\n","import { BlogPostModel, ProjectModel, GQLData, AuthorModel } from \"./gql\"\n\nexport const createBlogPosts = (data: GQLData): BlogPostModel[] => (\n  (data.allMarkdownRemark.edges || []).map(({ node }) => ({\n    ...node.frontmatter,\n    id: node.id,\n    slug: node.fields.slug,\n    excerpt: node.excerpt\n  } as BlogPostModel))\n)\n\nexport const createProjects = (data: GQLData): ProjectModel[] => (\n  (data.allMarkdownRemark.edges || [])\n    .map(({ node: { frontmatter } }: { node: { frontmatter: ProjectModel } }) => frontmatter)\n    .filter((project: ProjectModel) => project.published)\n    .sort((a: ProjectModel, b: ProjectModel) => (a.order || 99) - (b.order || 99))\n)\n\nexport const createAuthors = (data: GQLData): AuthorModel[] => (\n  (data.allMarkdownRemark.nodes || [])\n    .map(({ frontmatter }: { frontmatter: AuthorModel }) => frontmatter)\n)\n","const basePx = 16\nexport const pxToRem = (px: number) => `${px / basePx}rem`\n\nconst deviceSize = {\n  mobile: 480,\n  tablet: 768\n}\n\nexport default {\n  pxToRem,\n\n  pagePadding: pxToRem(40),\n\n  size: {\n    mobile: `${deviceSize.mobile}px`,\n    tablet: `${deviceSize.tablet}px`,\n    navHeight: '4.6rem'\n  },\n\n  device: {\n    mobile: `max-width: ${deviceSize.tablet} - 1px`,\n    desktop: `min-width: ${deviceSize.tablet}`,\n  },\n\n  color: {\n    primary: '#f7931e', //brightOrange\n    text: '#131214',\n    white: '#ffffff',\n    black: '#000000'\n  },\n\n  font: {\n    title: {\n      family: 'Montserrat, sans-serif',\n      size: pxToRem(22)\n    },\n    text: {\n      family: 'Lato, sans-serif',\n      size: pxToRem(18)\n    }\n  },\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProjectCard-module--container--2MezU\",\"imageWrap\":\"ProjectCard-module--imageWrap--3LJDb\",\"title\":\"ProjectCard-module--title--1ugqg\"};"],"sourceRoot":""}
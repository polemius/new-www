{"componentChunkName":"component---src-templates-post-template-tsx","path":"/blog/flutter-why-you-may-love-it-or-hate-it","result":{"data":{"markdownRemark":{"html":"<p>Flutter is a new Google's framework for creating cross-platform applications. So far, I haven't tried to create any cross-platform projects so I wanted to give it a try. This won't be a next\nbasic tutorial for creating apps with Flutter. I'll just present my first impression of things that have made me love and hate\nFlutter after a few hours of having fun with it.</p>\n<p align=\"center\">\n  <img src=\"/images/flutter-why-you-may-love-it-or-hate-it/flutter-logo.png\">\n</p>\n<p><strong>Dart</strong></p>\n<p>Before I started implementing my first application, I had thought it would be wise to prepare myself for new language syntax.\nFlutter is just a framework. Language which it uses is called Dart. Dart is an object-oriented, class defined, garbage-collected language created by Google. It is pretty similar to Kotlin, C# or Swift. Everything you need to know about it\nyou can find on Flutter's <a href=\"https://www.dartlang.org/guides/language\">Get started</a> page.</p>\n<h1>Flutter</h1>\n<p>One thing that is worth knowing is that Flutter’s application are not compiled like React Native or NativeScript code. It's not only UI elements, which are compiled, but the whole thing is. Flutter doesn't use a special bridge to communicate between\nour code and native code, it uses a C/C++ library for compilation, so it's much closer to a machine language and it gives\nus a much better performance.</p>\n<p><strong>First application</strong></p>\n<p>I've decided to continue my journey with Flutter's \"Get started\" documentation. The first application I've created was\ndeveloped step by step from <a href=\"https://flutter.io/docs/get-started/codelab\">this</a> tutorial.\nYou can see the complete code of an application below:</p>\n<pre><code>import 'package:flutter/material.dart';\nimport 'package:english_words/english_words.dart';\n\nvoid main() => runApp(MyApp());\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Startup Name Generator',\n      home: RandomWords(),\n    );\n  }\n}\n\nclass RandomWords extends StatefulWidget {\n  @override\n  RandomWordsState createState() => new RandomWordsState();\n}\n\nclass RandomWordsState extends State&#x3C;RandomWords> {\n  final _suggestions = &#x3C;WordPair>[];\n  final _biggerFont = const TextStyle(fontSize: 18.0);\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('Startup Name Generator'),\n      ),\n      body: _buildSuggestions(),\n    );\n  }\n\n  Widget _buildSuggestions() {\n    return ListView.builder(\n        padding: const EdgeInsets.all(16.0),\n        itemBuilder: (context, i) {\n          if (i.isOdd) return Divider();\n          final index = i ~/ 2;\n          if (index >= _suggestions.length) {\n            _suggestions.addAll(generateWordPairs().take(10));\n          }\n          return _buildRow(_suggestions[index]);\n        });\n  }\n\n  Widget _buildRow(WordPair pair) {\n    return ListTile(\n      title: Text(\n        pair.asPascalCase,\n        style: _biggerFont,\n      ),\n    );\n  }\n</code></pre>\n<p>A first few things you can notice is that:</p>\n<ul>\n<li>It's only one file - we don't create UI's in a separate file like I'm used to in Android development,</li>\n<li>It's short - about 50 lines for application which creates a never-ending list? It's pretty awesome!</li>\n<li>Everything is <strong>Widget</strong> - the whole Flutter application is created using Widgets. Every UI element (and even the main screen block) is a Widget. Creating Flutter app is just creating a tree of Widgets.</li>\n</ul>\n<p>Let's just quickly explain what is going on step by step:</p>\n<ul>\n<li>we start an application in the <code>main()</code> function calling <code>runApp()</code>,</li>\n<li>in <code>MyApp</code> class, we return <code>MaterialApp</code> with a title and the rest of the layout - <code>RandomWords</code> class (which of course is a Widget),</li>\n<li>in <code>RandomWordsState</code> we create <code>State</code> which is a logic for <code>RandomWords</code> class of what we would like to show inside,</li>\n<li>overriden <code>build</code> method creates the Widget - Scaffold, which in its <code>body</code> calls the function <code>buildSuggestions()</code>,\nthat will return us a <code>ListView</code> Widget,</li>\n<li><code>buildSuggestions()</code> for odd indexes creates a Divider (simple horizontal line) and for the even once, inflates a <code>ListTile</code>\nWidget using <code>buildRow()</code> function,</li>\n<li>finally the <code>buildRow()</code> creates a simple Text widget using a string generated by the <code>english_words</code> library which is\nbeing held in a <code>suggestions</code> array.</li>\n</ul>\n<p>Combining layout and logic code in a single place seemed strange to me at first, but I got used to it after some time.</p>\n<p><strong>Hot Reload</strong></p>\n<p>Flutter supports a great development feature. Hot Reload allows you to rerun your application after some simple changes in\nno time. That is great! I won't have to wait a minute every time I make a simple change, shall I? Well.. not necessarily, because\nit doesn't work every time. Let's say that we want to change Text's color in our application.\nWe adjust <code>_biggerFont</code> implementation to :</p>\n<pre><code>final _biggerFont = const TextStyle(fontSize: 18.0, color: Colors.green); \n</code></pre>\n<p>then save (saving the file applies Hot Reload as well) and... nothing happens. Texts inside the list\ndoesn't change their color. We have to rerun the application completely to see the changes.\nNow, if we try to change the text color to blue after pressing save, Hot Reload does work but as you see, in most cases it is better\nto just rerun application completely to be sure something does or doesn't work. Nevertheless, rerunning Flutter application\nseems to be a lot faster than rerunning traditional Android code.</p>\n<p><strong>Material Design</strong></p>\n<p>As you could have already noticed, everything in the Flutter app depends on Material Design. Even the main application container\nis called <code>MaterialApp</code>. Personally, I think that is great, because I love all the UI designs there, but for iOS user it might\nbe strange. Every Flutter app looks exactly the same on every platform. You can obviously change some layouts, depending\non the device it's running but it doesn't automatically adjust the style of the components to match a specific platform.</p>\n<p><strong>Things I love in Flutter</strong></p>\n<ul>\n<li>a lot of predefined Widgets - if you want to add Floating Button, Drawer Navigator or even some action buttons to the toolbar,\nit will take you only a few lines of the code to implement. All the basic features (like Toolbars - back button or\nDrawer's - open) are already implemented, </li>\n<li>easy implementation of animations,</li>\n<li>still developed - Google is adding new features all the time, new third-party libraries are being created and you can\nfind a lot of help on StackOverflow already,</li>\n<li>better performance than all the JavaScript's methods,</li>\n<li>Hot Reload - it actually helps :D.</li>\n</ul>\n<p><strong>Things I hate in Flutter</strong></p>\n<ul>\n<li>.yaml files - I've spent some time trying to fix a simple bug, which was caused by one additional white-space.\nWhen you add image, you need to specify it in <code>pubspec.yaml</code> file and I've made a typo there. Fortunately, <a href=\"http://www.yamllint.com/\">online validators</a> came to the rescue,</li>\n<li>\n<p>ending each Widget's argument's with comma - after adding the last argument of a Widget, you should end it with <code>,</code>.\nOtherwise the code will be badly / ugly formatted. This sometimes leads to the code which in the end looks like this:</p>\n<pre><code>    ],\n  ),\n),\n),\n);\n</code></pre>\n</li>\n<li>ending lines with a semicolon - after getting used to Kotlin, it's really annoying that I have to add the semicolons again (but that's more of a Dart thing I guess).</li>\n</ul>\n<p><strong>Should I use it?</strong></p>\n<p>Everything depends on a scope of a project. If you want to develop multi platform application by yourself it's easier to use\na cross-platform method, rather than writing native code for each one. Choosing between Flutter and React Native / NativeScript depends on you. Thanks to the constant development, it seems to me that it can outrun his competitors, but it hasn't done it yet.\nYou also need to bare in mind that cross-platform methods always lack some features. It is highly probable that for the\nvery specific task, you would have to add some native code. Fortunately, it's also not so hard to do with Flutter. </p>","excerpt":"Flutter is a new Google's framework for creating cross-platform applications. So far, I haven't tried to create any cross-platform projects…","frontmatter":{"slug":null,"title":"Flutter - why you may love it or hate it","description":null,"author":"lukasz","tags":["flutter","dart","android","cross-platform"],"date":"2019-03-17T23:00:00.000Z","image":"/images/flutter-why-you-may-love-it-or-hate-it/flutter-logo.png"},"timeToRead":5,"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2019-03-18-flutter-why-you-may-love-it-or-hate-it.md"},"allMarkdownRemark":{"nodes":[{"frontmatter":{"author_id":"adam","avatar":"/images/members/adam_bar.jpg","bio":"The Web Guy @ Bright Inventions","name":"Adam Bar","web":"https://whatwebcando.today"}},{"frontmatter":{"author_id":"agnieszka_h","avatar":"/images/members/agnieszka_h.jpg","bio":"Sales Manager @ Bright Inventions","name":"Agnieszka Hayashida","web":null}},{"frontmatter":{"author_id":"agnieszka","avatar":"/images/members/agnieszka_olszewska.jpg","bio":"Fullstack developer","name":"Agnieszka Olszewska","web":null}},{"frontmatter":{"author_id":"olo","avatar":"/images/members/aleksander_wielgorski.jpeg","bio":"Software Engineer @ Bright Inventions","name":"Aleksander Wielgórski","web":null}},{"frontmatter":{"author_id":"alisa","avatar":"/images/members/alisa_kashytska.jpg","bio":"Product designer","name":"Alisa Kashytska","web":null}},{"frontmatter":{"author_id":"azabost","avatar":"/images/members/andrzej_zabost.jpg","bio":"Senior Android developer","name":"Andrzej Zabost","web":"https://azabost.com"}},{"frontmatter":{"author_id":"arturs","avatar":"/images/members/artur.jpg","bio":"iOS developer","name":"Artur Suliński","web":null}},{"frontmatter":{"author_id":"bartek k","avatar":"/images/members/bartek_krzyzanski.jpg","bio":"Backend developer","name":"Bartek Krzyżański","web":null}},{"frontmatter":{"author_id":"bartekr","avatar":"/images/members/bartek.jpg","bio":"iOS developer","name":"Bartek Rozwarski","web":null}},{"frontmatter":{"author_id":"bartosz","avatar":"/images/members/bartosz_szafran.jpg","bio":"Senior Frontend Developer","name":"Bartosz Szafran","web":null}},{"frontmatter":{"author_id":"daniel","avatar":"/images/members/daniel_makurat.jpg","bio":"Co-founder & Senior Backend developer","name":"Daniel Makurat","web":null}},{"frontmatter":{"author_id":"eliasz","avatar":"/images/members/eliasz.png","bio":"Software Engineer @ Bright Inventions","name":"Eliasz Sawicki","web":"http://eluss.github.io/"}},{"frontmatter":{"author_id":"fjablonski","avatar":"/images/members/filip_jablonski.jpg","bio":"Senior iOS developer","name":"Filip Jabłoński","web":null}},{"frontmatter":{"author_id":"grzesiek","avatar":"/images/members/grzegorz_ciesla.jpg","bio":"Software Developer","name":"Grzegorz Cieśla","web":null}},{"frontmatter":{"author_id":"ivan","avatar":"/images/members/ivan.jpg","bio":"Fullstack developer","name":"Ivan Menshykov","web":null}},{"frontmatter":{"author_id":"janek","avatar":"/images/members/janhanc.jpg","bio":"Frontend developer","name":"Jan Hanc","web":null}},{"frontmatter":{"author_id":"kwysocki","avatar":"/images/members/kamil.png","bio":"Software Engineer @ Bright Inventions","name":"Kamil Wysocki","web":"https://wysockikamil.com"}},{"frontmatter":{"author_id":"karoln","avatar":"/images/members/karol_nadratowski.jpg","bio":null,"name":"Karol Nadratowski","web":null}},{"frontmatter":{"author_id":"karol r","avatar":"/images/members/karol_rinc.jpg","bio":"Backend developer","name":"Karol Rinc","web":null}},{"frontmatter":{"author_id":"kasia","avatar":"/images/members/kasia_lukasiewicz.jpg","bio":"Senior Project Manager","name":"Kasia Łukasiewicz","web":null}},{"frontmatter":{"author_id":"kasia g","avatar":"/images/members/katarzyna_galka.jpg","bio":"Project manager","name":"Katarzyna Gałka","web":null}},{"frontmatter":{"author_id":"krzysiek h","avatar":"/images/members/krzysztof_hinc.jpg","bio":"Web developer","name":"Krzysiek Hinc","web":null}},{"frontmatter":{"author_id":"krzysiek","avatar":"/images/members/krzysztof_kaczmarek.jpg","bio":"Senior iOS Developer","name":"Krzysztof Kaczmarek","web":null}},{"frontmatter":{"author_id":"maciej","avatar":"/images/members/maciej_seleman.jpg","bio":"QA Specialist","name":"Maciej Seleman","web":null}},{"frontmatter":{"author_id":"magda","avatar":"/images/members/magda_sadowska.jpg","bio":"Office & HR Assistant","name":"Magda Sadowska","web":null}},{"frontmatter":{"author_id":"maja","avatar":"/images/members/maja_puta.jpg","bio":"Junior QA Specialist","name":"Maja Puta","web":null}},{"frontmatter":{"author_id":"marcink","avatar":"/images/members/marcin_kwiatkowski.jpg","bio":null,"name":"Marcin Kwiatkowski","web":null}},{"frontmatter":{"author_id":"mateusz","avatar":"/images/members/mateusz_klimczak.jpg","bio":"Technical leader & Project manager","name":"Mateusz Klimczak","web":null}},{"frontmatter":{"author_id":"mateuszklimek","avatar":"/images/members/mateuszklimek.png","bio":"Software Engineer @ Bright Inventions","name":"Mateusz Klimek","web":null}},{"frontmatter":{"author_id":"michal k","avatar":"/images/members/michal_koszalka.jpg","bio":"Senior Backend developer","name":"Michał Koszałka","web":null}},{"frontmatter":{"author_id":"michał","avatar":"/images/members/michal_wrobel.jpg","bio":"Senior Backend Developer at Bright Inventions","name":"Michał Wróbel","web":null}},{"frontmatter":{"author_id":"michal","avatar":"/images/members/michał_łukasiewicz.jpg","bio":"Co-founder & Senior iOS developer","name":"Michał Łukasiewicz","web":null}},{"frontmatter":{"author_id":"monika","avatar":"/images/members/monika.jpg","bio":"Software Developer @ Bright Inventions","name":"Monika Niegrzybowska","web":null}},{"frontmatter":{"author_id":"nikodem","avatar":"/images/members/nikodem_kalinowski.jpg","bio":"Web developer","name":"Nikodem Kalinowski","web":null}},{"frontmatter":{"author_id":"patryk","avatar":"/images/members/patryk_huzarski.jpg","bio":"Software Developer @ Bright Inventions","name":"Patryk Huzarski","web":null}},{"frontmatter":{"author_id":"patryk sz","avatar":"/images/members/patryk_szlagowski.jpg","bio":"Senior Backend developer","name":"Patryk Szlagowski","web":null}},{"frontmatter":{"author_id":"paweł","avatar":"/images/members/paweł_gutkowski.jpg","bio":"Fullstack Developer at Bright Inventions ","name":"Paweł Gutkowski","web":null}},{"frontmatter":{"author_id":"pawel","avatar":"/images/members/paweł_papkiewicz.jpg","bio":"Fullstack developer","name":"Paweł Papkiewicz","web":null}},{"frontmatter":{"author_id":"piotr","avatar":"/images/members/piotr_mionskowski.jpg","bio":"TDD fan eager to learn new things","name":"Piotr Mionskowski","web":"https://miensol.pl"}},{"frontmatter":{"author_id":"piotr_l","avatar":"/images/members/piotrl.png","bio":"Android Developer @ Bright Inventions","name":"Piotr Łupiński","web":"http://exp.flamaster2.com"}},{"frontmatter":{"author_id":"radek","avatar":"/images/members/radek_pieczątkiewicz.jpg","bio":"Android developer","name":"Radek Pieczątkiewicz","web":null}},{"frontmatter":{"author_id":"radeks","avatar":"/images/members/radoslaw.jpg","bio":"Software Engineer @ Bright Inventions","name":"Radosław Słowiński","web":null}},{"frontmatter":{"author_id":"rafal h","avatar":"/images/members/rafal_hoffman.jpg","bio":"Fullstack developer","name":"Rafał Hofman","web":null}},{"frontmatter":{"author_id":"sebastian","avatar":"/images/members/sebastian_sobczak.jpg","bio":"Junior Account Manager at Bright Inventions ","name":"Sebastian Sobczak","web":null}},{"frontmatter":{"author_id":"szymek","avatar":"/images/members/szymon_miloch.jpg","bio":"Android & Web developer","name":"Szymon Miloch","web":null}},{"frontmatter":{"author_id":"tomek","avatar":"/images/members/tomek.jpeg","bio":null,"name":"Tomasz Gęsior","web":null}},{"frontmatter":{"author_id":"ula","avatar":"/images/members/ula_stankiewicz.jpg","bio":"HR & Marketing Manager","name":"Ula Stankiewicz","web":null}},{"frontmatter":{"author_id":"wojciech","avatar":"/images/members/wojciech_baczyński.jpg","bio":"Fullstack developer","name":"Wojciech Baczyński","web":null}},{"frontmatter":{"author_id":"lukasz","avatar":"/images/members/lukasz_reszetow.jpg","bio":"Android developer","name":"Łukasz Reszetow","web":null}}]},"site":{"siteMetadata":{"siteUrl":"https://brightinventions.pl"}}},"pageContext":{"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2019-03-18-flutter-why-you-may-love-it-or-hate-it.md"}}}
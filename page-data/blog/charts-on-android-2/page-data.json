{"componentChunkName":"component---src-templates-post-template-tsx","path":"/blog/charts-on-android-2","result":{"data":{"markdownRemark":{"html":"<p>In the <a href=\"https://brightinventions.pl/blog/charts-on-android-1/\">previous post</a> I did show you how to make a basic setup of Android linear chart using <a href=\"https://github.com/PhilJay/MPAndroidChart\">MPAndroidChart</a> library. Now I'll show you some features I found useful.</p>\n<p><img src=\"/images/radek/tuning.jpg\" alt=\"tuning\"></p>\n<h2>Custom handling of chart tap event</h2>\n<p>The library provides default highlight values behavior on tap or drag. You may want to handle it by yourself, so get familiar with <code>OnChartValueSelectedListener</code>. It contains 2 methods:</p>\n<ul>\n<li><code>onNothingSelected</code></li>\n<li><code>onValueSelected</code></li>\n</ul>\n<p><code>onValueSelected</code> provides <code>Entry</code> object which gives you an access to the data, that is <code>FoodSearch</code> in our case. Let's  use it to something simple, like displaying some info in the toast, to see how it works:</p>\n<pre><code class=\"language-kotlin\">lineChart.isHighlightPerTapEnabled = true\n\nlineChart.setOnChartValueSelectedListener(object : OnChartValueSelectedListener {\n\n    override fun onNothingSelected() {}\n\n    override fun onValueSelected(e: Entry, h: Highlight) {\n        val yearWeek = (e.data as FoodSearch).week_id\n        Toast.makeText(baseContext, \"date: $yearWeek\", Toast.LENGTH_SHORT).show()\n    }\n})\n</code></pre>\n<p><img src=\"/images/radek/chart_highlight.png\" alt=\"highlight chart\"></p>\n<p>If you want to display some view over selected Entry you may take advantage of the <code>Highlight</code> object in the <code>onValueSelected</code> method and get Entry's coordinates on the screen by accsessing <code>xPx</code> and <code>yPx</code>properties and set them to the view.</p>\n<h2>Live Data</h2>\n<blockquote>\n<p>MPAndroidChart does not officially support realtime data, <strong>*however</strong> (...)*</p>\n</blockquote>\n<p>As long as we keep reference to the specific <code>DataSet</code> object, we are able to add and remove entries dynamically. It might be a result of syncing data from the internet or partial progress some asynchronous task - doesn't matter. Let's add a random entry on the button click.</p>\n<pre><code class=\"language-kotlin\">val rand = Random()\nbananaDataSet.addEntry(Entry(bananaDataSet.entryCount.toFloat(), rand.nextFloat() * 100))\nyogurtDataSet.addEntry(Entry(yogurtDataSet.entryCount.toFloat(), rand.nextFloat() * 100))\n</code></pre>\n<p>When modifying data set, BOTH <code>LineData</code> object and the chart need to be notified about it. To do so, invoke proper method on them, then simply invalidate the chart like you would with any other view element.</p>\n<pre><code class=\"language-kotlin\">lineChart.data.notifyDataChanged()\nlineChart.notifyDataSetChanged()\nlineChart.invalidate()\n</code></pre>\n<p>I recommend you to check out other ways of updating chart data described in the <a href=\"https://github.com/PhilJay/MPAndroidChart/wiki/Dynamic-&#x26;-Realtime-Data\">docs</a>.</p>\n<h2>Viewport</h2>\n<p>Let's say you want to put readability aside, remove labels and axes with all that white spaces and make a pure chart view fill the screen. Labels/ axis configuration is obvious, just disable them:</p>\n<pre><code class=\"language-kotlin\">lineChart.axisLeft.isEnabled = false\nlineChart.axisRight.isEnabled = false\nlineChart.xAxis.isEnabled = false\nlineChart.description.isEnabled = false\nlineChart.legend.isEnabled = false\n</code></pre>\n<p>Unfortunately, it does not make the job done. As you can see below there are still space between the chart and the parent view left.</p>\n<p><img src=\"/images/radek/chart_viewport_1.png\" alt=\"default viewport\"></p>\n<p>How to disable the chart padding? The library provides us a simple way to modify chart's <code>Viewport</code>. In this case call method <code>setViewPortOffsets(0f,0f,0f,0f)</code> on the chart object. It sets chart's offset (padding) to 0. Just remember all viewport modifications have to be called <strong>after</strong> data is set up.</p>\n<h5>BUT...!</h5>\n<p>It's a solution you need to be cautious about. What does the documentation say about using this approach?</p>\n<blockquote>\n<p>USE THIS ONLY WHEN YOU KNOW WHAT YOU ARE DOING.</p>\n</blockquote>\n<p>Why? During a short adventure with chart's viewport I came across one problematic issue. Offset seemed to be recalculated independently and every other view besides the chart itself didn't know about the change. This may cause some render problems, for example like this:</p>\n<p><img src=\"/images/radek/chart_viewport_2.png\" alt=\"viewport issue\"> </p>\n<p>Displayed value is the mentioned \"other view\" that does not know about the offset change, so edge values are cut. Keep this in mind modifying viewport! For more viewport modifications check out the project's <a href=\"https://github.com/PhilJay/MPAndroidChart/wiki/Modifying-the-Viewport\">wiki page</a>.</p>\n<h2>Drawable Values</h2>\n<p>If you need to mark any value in some special way you may define <code>Entry</code>'s <code>icon</code> property. It's an instance of a <code>Drawable</code> class, so it's very easy to layout the icon in a resource file and then apply  it to the Entry. In our example let's mark with a red dot each value that differs from the previous one more than <em>15</em> to see every bigger steeper slope on the chart.</p>\n<p>Define any drawable resource, for example 20x20 red oval:</p>\n<pre><code class=\"language-xml\">&#x3C;shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"oval\">\n    &#x3C;size android:width=\"20dp\" android:height=\"20dp\" />\n    &#x3C;solid android:color=\"#ff0000\" />\n&#x3C;/shape>\n</code></pre>\n<p>Now add some code to <code>getEntriesFromCSV</code> method. Before adding a new <code>Entry</code> to an array, add the Drawable as the icon's property if the point fulfills the condition:</p>\n<pre><code class=\"language-kotlin\">data?.mapIndexed { index, foodSearch ->\n    val entry = Entry(index.toFloat(), foodSearch.value.toFloat(), foodSearch)\n    val steeperSlope = 15\n\n    if (index != 0 &#x26;&#x26; (foodSearch.value > data?.get(index - 1)!!.value + steeperSlope ||\n                    foodSearch.value &#x3C; data?.get(index - 1)!!.value - steeperSlope)) {\n\n        val icon = resources.getDrawable(R.drawable.ic_balloon, null)\n        entry.icon = icon\n    }\n\n    entries.add(entry)\n}\n</code></pre>\n<p>In order to see the icons, set the <em>drawIcons</em> flag to <code>true</code> on each <code>DataSet</code> object:</p>\n<pre><code class=\"language-kotlin\">bananaDataSet.setDrawIcons(true)\nyogurtDataSet.setDrawIcons(true)\n</code></pre>\n<p>Thank's to that icons are displayed over specified entries:</p>\n<p><img src=\"/images/radek/chart_icons_1.png\" alt=\"icons over values\"></p>","excerpt":"In the previous post I did show you how to make a basic setup of Android linear chart using MPAndroidChart library. Now I'll show you some…","frontmatter":{"slug":null,"title":"Adding features to your chart on Android","description":null,"author":"radek","tags":["android","chart","live data","dynamic data"],"date":"2018-03-04T23:00:00.000Z","image":"/images/radek/tuning.jpg"},"timeToRead":4,"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2018-03-05-charts-on-android-2.md"},"allMarkdownRemark":{"nodes":[{"frontmatter":{"author_id":"adam","avatar":"/images/members/adam_bar.jpg","bio":"The Web Guy @ Bright Inventions","name":"Adam Bar","web":"https://whatwebcando.today"}},{"frontmatter":{"author_id":"agnieszka_h","avatar":"/images/members/agnieszka_h.jpg","bio":"Sales Manager @ Bright Inventions","name":"Agnieszka Hayashida","web":null}},{"frontmatter":{"author_id":"agnieszka","avatar":"/images/members/agnieszka_olszewska.jpg","bio":"Fullstack developer","name":"Agnieszka Olszewska","web":null}},{"frontmatter":{"author_id":"olo","avatar":"/images/members/aleksander_wielgorski.jpeg","bio":"Software Engineer @ Bright Inventions","name":"Aleksander Wielgórski","web":null}},{"frontmatter":{"author_id":"alisa","avatar":"/images/members/alisa_kashytska.jpg","bio":"Product designer","name":"Alisa Kashytska","web":null}},{"frontmatter":{"author_id":"azabost","avatar":"/images/members/andrzej_zabost.jpg","bio":"Senior Android developer","name":"Andrzej Zabost","web":"https://azabost.com"}},{"frontmatter":{"author_id":"arturs","avatar":"/images/members/artur.jpg","bio":"iOS developer","name":"Artur Suliński","web":null}},{"frontmatter":{"author_id":"bartek k","avatar":"/images/members/bartek_krzyzanski.jpg","bio":"Backend developer","name":"Bartek Krzyżański","web":null}},{"frontmatter":{"author_id":"bartekr","avatar":"/images/members/bartek.jpg","bio":"iOS developer","name":"Bartek Rozwarski","web":null}},{"frontmatter":{"author_id":"bartosz","avatar":"/images/members/bartosz_szafran.jpg","bio":"Senior Frontend Developer","name":"Bartosz Szafran","web":null}},{"frontmatter":{"author_id":"daniel","avatar":"/images/members/daniel_makurat.jpg","bio":"Co-founder & Senior Backend developer","name":"Daniel Makurat","web":null}},{"frontmatter":{"author_id":"eliasz","avatar":"/images/members/eliasz.png","bio":"Software Engineer @ Bright Inventions","name":"Eliasz Sawicki","web":"http://eluss.github.io/"}},{"frontmatter":{"author_id":"fjablonski","avatar":"/images/members/filip_jablonski.jpg","bio":"Senior iOS developer","name":"Filip Jabłoński","web":null}},{"frontmatter":{"author_id":"grzesiek","avatar":"/images/members/grzegorz_ciesla.jpg","bio":"Software Developer","name":"Grzegorz Cieśla","web":null}},{"frontmatter":{"author_id":"ivan","avatar":"/images/members/ivan.jpg","bio":"Fullstack developer","name":"Ivan Menshykov","web":null}},{"frontmatter":{"author_id":"janek","avatar":"/images/members/janhanc.jpg","bio":"Frontend developer","name":"Jan Hanc","web":null}},{"frontmatter":{"author_id":"kwysocki","avatar":"/images/members/kamil.png","bio":"Software Engineer @ Bright Inventions","name":"Kamil Wysocki","web":"https://wysockikamil.com"}},{"frontmatter":{"author_id":"karoln","avatar":"/images/members/karol_nadratowski.jpg","bio":null,"name":"Karol Nadratowski","web":null}},{"frontmatter":{"author_id":"karol r","avatar":"/images/members/karol_rinc.jpg","bio":"Backend developer","name":"Karol Rinc","web":null}},{"frontmatter":{"author_id":"kasia","avatar":"/images/members/kasia_lukasiewicz.jpg","bio":"Senior Project Manager","name":"Kasia Łukasiewicz","web":null}},{"frontmatter":{"author_id":"kasia g","avatar":"/images/members/katarzyna_galka.jpg","bio":"Project manager","name":"Katarzyna Gałka","web":null}},{"frontmatter":{"author_id":"krzysiek h","avatar":"/images/members/krzysztof_hinc.jpg","bio":"Web developer","name":"Krzysiek Hinc","web":null}},{"frontmatter":{"author_id":"krzysiek","avatar":"/images/members/krzysztof_kaczmarek.jpg","bio":"Senior iOS Developer","name":"Krzysztof Kaczmarek","web":null}},{"frontmatter":{"author_id":"maciej","avatar":"/images/members/maciej_seleman.jpg","bio":"QA Specialist","name":"Maciej Seleman","web":null}},{"frontmatter":{"author_id":"magda","avatar":"/images/members/magda_sadowska.jpg","bio":"Office & HR Assistant","name":"Magda Sadowska","web":null}},{"frontmatter":{"author_id":"maja","avatar":"/images/members/maja_puta.jpg","bio":"Junior QA Specialist","name":"Maja Puta","web":null}},{"frontmatter":{"author_id":"marcink","avatar":"/images/members/marcin_kwiatkowski.jpg","bio":null,"name":"Marcin Kwiatkowski","web":null}},{"frontmatter":{"author_id":"mateusz","avatar":"/images/members/mateusz_klimczak.jpg","bio":"Technical leader & Project manager","name":"Mateusz Klimczak","web":null}},{"frontmatter":{"author_id":"mateuszklimek","avatar":"/images/members/mateuszklimek.png","bio":"Software Engineer @ Bright Inventions","name":"Mateusz Klimek","web":null}},{"frontmatter":{"author_id":"michal k","avatar":"/images/members/michal_koszalka.jpg","bio":"Senior Backend developer","name":"Michał Koszałka","web":null}},{"frontmatter":{"author_id":"michał","avatar":"/images/members/michal_wrobel.jpg","bio":"Senior Backend Developer at Bright Inventions","name":"Michał Wróbel","web":null}},{"frontmatter":{"author_id":"michal","avatar":"/images/members/michał_łukasiewicz.jpg","bio":"Co-founder & Senior iOS developer","name":"Michał Łukasiewicz","web":null}},{"frontmatter":{"author_id":"monika","avatar":"/images/members/monika.jpg","bio":"Software Developer @ Bright Inventions","name":"Monika Niegrzybowska","web":null}},{"frontmatter":{"author_id":"nikodem","avatar":"/images/members/nikodem_kalinowski.jpg","bio":"Web developer","name":"Nikodem Kalinowski","web":null}},{"frontmatter":{"author_id":"patryk","avatar":"/images/members/patryk_huzarski.jpg","bio":"Software Developer @ Bright Inventions","name":"Patryk Huzarski","web":null}},{"frontmatter":{"author_id":"patryk sz","avatar":"/images/members/patryk_szlagowski.jpg","bio":"Senior Backend developer","name":"Patryk Szlagowski","web":null}},{"frontmatter":{"author_id":"paweł","avatar":"/images/members/paweł_gutkowski.jpg","bio":"Fullstack Developer at Bright Inventions ","name":"Paweł Gutkowski","web":null}},{"frontmatter":{"author_id":"pawel","avatar":"/images/members/paweł_papkiewicz.jpg","bio":"Fullstack developer","name":"Paweł Papkiewicz","web":null}},{"frontmatter":{"author_id":"piotr","avatar":"/images/members/piotr_mionskowski.jpg","bio":"TDD fan eager to learn new things","name":"Piotr Mionskowski","web":"https://miensol.pl"}},{"frontmatter":{"author_id":"piotr_l","avatar":"/images/members/piotrl.png","bio":"Android Developer @ Bright Inventions","name":"Piotr Łupiński","web":"http://exp.flamaster2.com"}},{"frontmatter":{"author_id":"radek","avatar":"/images/members/radek_pieczątkiewicz.jpg","bio":"Android developer","name":"Radek Pieczątkiewicz","web":null}},{"frontmatter":{"author_id":"radeks","avatar":"/images/members/radoslaw.jpg","bio":"Software Engineer @ Bright Inventions","name":"Radosław Słowiński","web":null}},{"frontmatter":{"author_id":"rafal h","avatar":"/images/members/rafal_hoffman.jpg","bio":"Fullstack developer","name":"Rafał Hofman","web":null}},{"frontmatter":{"author_id":"sebastian","avatar":"/images/members/sebastian_sobczak.jpg","bio":"Junior Account Manager at Bright Inventions ","name":"Sebastian Sobczak","web":null}},{"frontmatter":{"author_id":"szymek","avatar":"/images/members/szymon_miloch.jpg","bio":"Android & Web developer","name":"Szymon Miloch","web":null}},{"frontmatter":{"author_id":"tomek","avatar":"/images/members/tomek.jpeg","bio":null,"name":"Tomasz Gęsior","web":null}},{"frontmatter":{"author_id":"ula","avatar":"/images/members/ula_stankiewicz.jpg","bio":"HR & Marketing Manager","name":"Ula Stankiewicz","web":null}},{"frontmatter":{"author_id":"wojciech","avatar":"/images/members/wojciech_baczyński.jpg","bio":"Fullstack developer","name":"Wojciech Baczyński","web":null}},{"frontmatter":{"author_id":"lukasz","avatar":"/images/members/lukasz_reszetow.jpg","bio":"Android developer","name":"Łukasz Reszetow","web":null}}]},"site":{"siteMetadata":{"siteUrl":"https://brightinventions.pl"}}},"pageContext":{"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2018-03-05-charts-on-android-2.md"}}}
{"componentChunkName":"component---src-templates-post-template-tsx","path":"/blog/swift-facade-pattern","result":{"data":{"markdownRemark":{"html":"<p><img src=\"/images/swift-facade-pattern/facade.jpg\" alt=\"facade image\"></p>\n<h2>About the pattern</h2>\n<p>Facade pattern is one of the Structural Patterns. The main aim of it is to hide the complexity of a system, class or logic and provide all functionalities behind a simple interface.\nCommonly, Facade is implemented in a way that one class is related to other classes which represents a system logic. Please take a look at the diagram:</p>\n<p><img src=\"/images/swift-facade-pattern/diagram.png\" alt=\"diagram\"></p>\n<p>As you can see, there is one class called <code>Facade</code> which separates the logic from <code>LogicA</code>, <code>LogicB</code>, <code>LogicC</code> classes. As a result our client only call the <code>Facade</code> class in order to execute some methods that are implemented in other classes.</p>\n<h2>Implementation</h2>\n<p>Let's imagine a simple scenario. You have already created a great app called <code>Super-Photo</code>. One of the core features of your app is saving/converting images with <code>JPEG</code> or <code>PNG</code> extension. In order to do this you want to save <code>UIImage</code> representation in two ways. One is saving it as a <code>PNG</code> type, the second is saving it as a <code>JPEG</code> file type.</p>\n<p>Fistly, in order to handle our image types and possible errors in our code - it will be nice to have two enums that will make our code cleaner and more readable.</p>\n<pre><code class=\"language-swift\">enum ImageSaverError: Error {\n    case couldNotCreateDestinationPath\n    case couldNotCreateJPEGDataFromImage\n    case couldNotCreatePNGDataFromImage\n    case couldNotSaveImageInDestinationPath\n}\n\nenum ImageType {\n    case png\n    case jpeg(compressionQuality: CGFloat)\n}\n</code></pre>\n<p>On the next step you will need to create a class that will handle a data providing for each photo extension:</p>\n<pre><code class=\"language-swift\">class ImageDataProvider {\n    func data(from image: UIImage, type: ImageType) throws -> Data {\n        switch type {\n        case .jpeg(let compressionQuality):\n            return try jpegData(from: image, compressionQuality: compressionQuality)\n        case .png:\n            return try pngData(from: image)\n        }\n    }\n\n    private func pngData(from image: UIImage) throws -> Data {\n        guard let imageData = UIImagePNGRepresentation(image) else { throw ImageSaverError.couldNotCreateJPEGDataFromImage }\n        return imageData\n    }\n\n    private func jpegData(from image: UIImage, compressionQuality: CGFloat) throws -> Data {\n        guard let imageData = UIImageJPEGRepresentation(image, compressionQuality) else { throw ImageSaverError.couldNotCreatePNGDataFromImage }\n        return imageData\n    }\n}\n</code></pre>\n<p>As you've noticed, our <code>ImageDataProvider</code> takes <code>image</code> and <code>type</code> parameters and creates the image data with proper extension <code>JPEG</code> or <code>PNG</code>.</p>\n<p>The last step is to create class which is needed to save <code>UIImage</code>. So let's name it a <code>PathProvider</code>. </p>\n<pre><code class=\"language-swift\">class PathProvider {\n    func createDestinationPath(fileName: String) throws -> URL {\n        guard let path = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask).first else {\n            throw ImageSaverError.couldNotCreateDestinationPath\n        }\n        let destinationPath = path.appendingPathComponent(\"\\(fileName)\")\n        return destinationPath\n    }\n}\n</code></pre>\n<p>Ok, so at the moment we have two classes with some logic inside. Now it's time to create a facade for it!</p>\n<p><img src=\"/images/swift-facade-pattern/do_this.gif\" alt=\"let&#x27;s do this\"></p>\n<p>Create a class called <code>ImageSaverFacade</code> :</p>\n<pre><code class=\"language-swift\">class ImageSaverFacade {\n    private let pathProvider = PathProvider()\n    private let dataProvider = ImageDataProvider()\n\n    func save(image: UIImage, type: ImageType, fileName: String, overwrite: Bool) throws {\n        let destinationURL = try pathProvider.createDestinationPath(fileName: fileName)\n        let imageData = try dataProvider.data(from: image, type: type)\n        let writingOptions: Data.WritingOptions = overwrite ? (.atomic) : (.withoutOverwriting)\n        try imageData.write(to: destinationURL, options: writingOptions)\n    }\n}\n</code></pre>\n<p>Our <code>ImageSaverFacade</code> class has two private objects of <code>PathProvider</code> and <code>ImageDataProvider</code> class. Because the client doesn't need to know anything about logic inside, the only thing which <code>ImageSaverFacade</code> exposes to a public is one method:</p>\n<ul>\n<li><code>func save(image: UIImage, type: ImageType, fileName: String, overwrite: Bool) throws</code></li>\n</ul>\n<p>This method is the only thing that our client should care about.</p>\n<p>Now let's move on to the facade usage part:</p>\n<pre><code class=\"language-swift\">let imageSaver = ImageSaverFacade()\nlet image = UIImage(named: \"my_image\")!\ndo {\n    try imageSaver.save(image: image, type: .png, fileName: \"my_file_name\", overwrite: true)\n} catch  {\n    //handle Error\n}\n// or\ndo {\n    try imageSaver.save(image: image, type: .jpeg(compressionQuality: 1.0), fileName: \"my_file_name\", overwrite: false)\n} catch  {\n    //handle Error\n}\n</code></pre>\n<h2>Conclusion</h2>\n<p>Please notice that our facade covers logic associated with <code>Data</code> providing and creating a valid <code>URL</code> for file destination. And because of that, it is super easy to save <code>UIImage</code> as <code>PNG</code> or <code>JPEG</code> using our <code>ImageSaverFacade</code>. Only thing to do is to pass the correct parameters to facade method.</p>\n<p>Facade design pattern can be used in many cases. Facade creates for you a simple gateway to a complicated system. By using it you will definitely make your code simpler to understand and read.</p>","excerpt":"facade image About the pattern Facade pattern is one of the Structural Patterns. The main aim of it is to hide the complexity of a system…","frontmatter":{"slug":null,"title":"Design Patterns with Swift: Facade pattern","description":null,"author":"kwysocki","tags":["iOS","swift","design patterns","facade pattern"],"date":"2017-11-15T23:00:00.000Z","image":"/images/swift-facade-pattern/facade.jpg"},"timeToRead":3,"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2017-11-16-swift-facade-pattern.md"},"allMarkdownRemark":{"nodes":[{"frontmatter":{"author_id":"adam","avatar":"/images/members/adam_bar.jpg","bio":"The Web Guy @ Bright Inventions","name":"Adam Bar","web":"https://whatwebcando.today"}},{"frontmatter":{"author_id":"agnieszka_h","avatar":"/images/members/agnieszka_h.jpg","bio":"Sales Manager @ Bright Inventions","name":"Agnieszka Hayashida","web":null}},{"frontmatter":{"author_id":"agnieszka","avatar":"/images/members/agnieszka_olszewska.jpg","bio":"Fullstack developer","name":"Agnieszka Olszewska","web":null}},{"frontmatter":{"author_id":"olo","avatar":"/images/members/aleksander_wielgorski.jpeg","bio":"Software Engineer @ Bright Inventions","name":"Aleksander Wielgórski","web":null}},{"frontmatter":{"author_id":"alisa","avatar":"/images/members/alisa_kashytska.jpg","bio":"Product designer","name":"Alisa Kashytska","web":null}},{"frontmatter":{"author_id":"azabost","avatar":"/images/members/andrzej_zabost.jpg","bio":"Senior Android developer","name":"Andrzej Zabost","web":"https://azabost.com"}},{"frontmatter":{"author_id":"arturs","avatar":"/images/members/artur.jpg","bio":"iOS developer","name":"Artur Suliński","web":null}},{"frontmatter":{"author_id":"bartek k","avatar":"/images/members/bartek_krzyzanski.jpg","bio":"Backend developer","name":"Bartek Krzyżański","web":null}},{"frontmatter":{"author_id":"bartekr","avatar":"/images/members/bartek.jpg","bio":"iOS developer","name":"Bartek Rozwarski","web":null}},{"frontmatter":{"author_id":"bartosz","avatar":"/images/members/bartosz_szafran.jpg","bio":"Senior Frontend Developer","name":"Bartosz Szafran","web":null}},{"frontmatter":{"author_id":"daniel","avatar":"/images/members/daniel_makurat.jpg","bio":"Co-founder & Senior Backend developer","name":"Daniel Makurat","web":null}},{"frontmatter":{"author_id":"eliasz","avatar":"/images/members/eliasz.png","bio":"Software Engineer @ Bright Inventions","name":"Eliasz Sawicki","web":"http://eluss.github.io/"}},{"frontmatter":{"author_id":"fjablonski","avatar":"/images/members/filip_jablonski.jpg","bio":"Senior iOS developer","name":"Filip Jabłoński","web":null}},{"frontmatter":{"author_id":"grzesiek","avatar":"/images/members/grzegorz_ciesla.jpg","bio":"Software Developer","name":"Grzegorz Cieśla","web":null}},{"frontmatter":{"author_id":"ivan","avatar":"/images/members/ivan.jpg","bio":"Fullstack developer","name":"Ivan Menshykov","web":null}},{"frontmatter":{"author_id":"janek","avatar":"/images/members/janhanc.jpg","bio":"Frontend developer","name":"Jan Hanc","web":null}},{"frontmatter":{"author_id":"kwysocki","avatar":"/images/members/kamil.png","bio":"Software Engineer @ Bright Inventions","name":"Kamil Wysocki","web":"https://wysockikamil.com"}},{"frontmatter":{"author_id":"karoln","avatar":"/images/members/karol_nadratowski.jpg","bio":null,"name":"Karol Nadratowski","web":null}},{"frontmatter":{"author_id":"karol r","avatar":"/images/members/karol_rinc.jpg","bio":"Backend developer","name":"Karol Rinc","web":null}},{"frontmatter":{"author_id":"kasia","avatar":"/images/members/kasia_lukasiewicz.jpg","bio":"Senior Project Manager","name":"Kasia Łukasiewicz","web":null}},{"frontmatter":{"author_id":"kasia g","avatar":"/images/members/katarzyna_galka.jpg","bio":"Project manager","name":"Katarzyna Gałka","web":null}},{"frontmatter":{"author_id":"krzysiek h","avatar":"/images/members/krzysztof_hinc.jpg","bio":"Web developer","name":"Krzysiek Hinc","web":null}},{"frontmatter":{"author_id":"krzysiek","avatar":"/images/members/krzysztof_kaczmarek.jpg","bio":"Senior iOS Developer","name":"Krzysztof Kaczmarek","web":null}},{"frontmatter":{"author_id":"maciej","avatar":"/images/members/maciej_seleman.jpg","bio":"QA Specialist","name":"Maciej Seleman","web":null}},{"frontmatter":{"author_id":"magda","avatar":"/images/members/magda_sadowska.jpg","bio":"Office & HR Assistant","name":"Magda Sadowska","web":null}},{"frontmatter":{"author_id":"maja","avatar":"/images/members/maja_puta.jpg","bio":"Junior QA Specialist","name":"Maja Puta","web":null}},{"frontmatter":{"author_id":"marcink","avatar":"/images/members/marcin_kwiatkowski.jpg","bio":null,"name":"Marcin Kwiatkowski","web":null}},{"frontmatter":{"author_id":"mateusz","avatar":"/images/members/mateusz_klimczak.jpg","bio":"Technical leader & Project manager","name":"Mateusz Klimczak","web":null}},{"frontmatter":{"author_id":"mateuszklimek","avatar":"/images/members/mateuszklimek.png","bio":"Software Engineer @ Bright Inventions","name":"Mateusz Klimek","web":null}},{"frontmatter":{"author_id":"michal k","avatar":"/images/members/michal_koszalka.jpg","bio":"Senior Backend developer","name":"Michał Koszałka","web":null}},{"frontmatter":{"author_id":"michał","avatar":"/images/members/michal_wrobel.jpg","bio":"Senior Backend Developer at Bright Inventions","name":"Michał Wróbel","web":null}},{"frontmatter":{"author_id":"michal","avatar":"/images/members/michał_łukasiewicz.jpg","bio":"Co-founder & Senior iOS developer","name":"Michał Łukasiewicz","web":null}},{"frontmatter":{"author_id":"monika","avatar":"/images/members/monika.jpg","bio":"Software Developer @ Bright Inventions","name":"Monika Niegrzybowska","web":null}},{"frontmatter":{"author_id":"nikodem","avatar":"/images/members/nikodem_kalinowski.jpg","bio":"Web developer","name":"Nikodem Kalinowski","web":null}},{"frontmatter":{"author_id":"patryk","avatar":"/images/members/patryk_huzarski.jpg","bio":"Software Developer @ Bright Inventions","name":"Patryk Huzarski","web":null}},{"frontmatter":{"author_id":"patryk sz","avatar":"/images/members/patryk_szlagowski.jpg","bio":"Senior Backend developer","name":"Patryk Szlagowski","web":null}},{"frontmatter":{"author_id":"paweł","avatar":"/images/members/paweł_gutkowski.jpg","bio":"Fullstack Developer at Bright Inventions ","name":"Paweł Gutkowski","web":null}},{"frontmatter":{"author_id":"pawel","avatar":"/images/members/paweł_papkiewicz.jpg","bio":"Fullstack developer","name":"Paweł Papkiewicz","web":null}},{"frontmatter":{"author_id":"piotr","avatar":"/images/members/piotr_mionskowski.jpg","bio":"TDD fan eager to learn new things","name":"Piotr Mionskowski","web":"https://miensol.pl"}},{"frontmatter":{"author_id":"piotr_l","avatar":"/images/members/piotrl.png","bio":"Android Developer @ Bright Inventions","name":"Piotr Łupiński","web":"http://exp.flamaster2.com"}},{"frontmatter":{"author_id":"radek","avatar":"/images/members/radek_pieczątkiewicz.jpg","bio":"Android developer","name":"Radek Pieczątkiewicz","web":null}},{"frontmatter":{"author_id":"radeks","avatar":"/images/members/radoslaw.jpg","bio":"Software Engineer @ Bright Inventions","name":"Radosław Słowiński","web":null}},{"frontmatter":{"author_id":"rafal h","avatar":"/images/members/rafal_hoffman.jpg","bio":"Fullstack developer","name":"Rafał Hofman","web":null}},{"frontmatter":{"author_id":"sebastian","avatar":"/images/members/sebastian_sobczak.jpg","bio":"Junior Account Manager at Bright Inventions ","name":"Sebastian Sobczak","web":null}},{"frontmatter":{"author_id":"szymek","avatar":"/images/members/szymon_miloch.jpg","bio":"Android & Web developer","name":"Szymon Miloch","web":null}},{"frontmatter":{"author_id":"tomek","avatar":"/images/members/tomek.jpeg","bio":null,"name":"Tomasz Gęsior","web":null}},{"frontmatter":{"author_id":"ula","avatar":"/images/members/ula_stankiewicz.jpg","bio":"HR & Marketing Manager","name":"Ula Stankiewicz","web":null}},{"frontmatter":{"author_id":"wojciech","avatar":"/images/members/wojciech_baczyński.jpg","bio":"Fullstack developer","name":"Wojciech Baczyński","web":null}},{"frontmatter":{"author_id":"lukasz","avatar":"/images/members/lukasz_reszetow.jpg","bio":"Android developer","name":"Łukasz Reszetow","web":null}}]},"site":{"siteMetadata":{"siteUrl":"https://brightinventions.pl"}}},"pageContext":{"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2017-11-16-swift-facade-pattern.md"}}}
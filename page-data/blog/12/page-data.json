{"componentChunkName":"component---src-templates-blog-list-template-tsx","path":"/blog/12","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"25e9e691-a5b1-5ee4-8176-5900f1f99d8c","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2017-11-24-IOTA-Hackathon.md","excerpt":"Last weekend we had pleasure to co-organise and take part in IOTA Hackathon, the event during which software developers from all over Europe came to put to test IOTA Platform with different use cases. IOTA Hackathon was held from 17 to 19 November and was sponsored by IOTA, Baltic Data Science (blockchain and big data service), Datarella (blockchain and big data consultancy) and Bright Inventions.  The hackathon started with the preceding keynote presentations of Chris Dukakis from IOTA and…","frontmatter":{"excerpt":"One may ask if it is a real fun spending two days in front of computer with a bunch of strangers. The example of IOTA Hackathon shows that it is indeed.","comments":null,"image":null,"author":"ula","author_id":null,"title":"IOTA Hackathon","tags":["IOTA","hackathon","cryptocurrency","teamwork"],"date":"2017-11-23T23:00:00.000Z"},"fields":{"slug":"/blog/2017-11-24-IOTA-Hackathon"}}},{"node":{"id":"0e211bcd-3045-51e0-8ec4-f2c288bda8d3","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2017-11-21-spring-mvc-thread-pool-timeouts.md","excerpt":"Last time we reviewed how to configure HTTP client timeouts. This time let us focus on the other side of the HTTP request i.e. server. There is pretty much always a thread pool involved when we write a Spring MVC application. The thread pool configuration will vary depending on particular servlet container (Tomcat, Undertow, Jetty) so we have to watch out for subtle differences. However, most if not all of them will use a thread pool with fixed maximum size. As we already know, a pool of…","frontmatter":{"excerpt":null,"comments":true,"image":"/images/thread-pool-timeouts/thread-pool.jpg","author":"piotr","author_id":null,"title":"Request timeouts in Spring MVC","tags":["spring","mvc","spring-boot","thread-pool","timeout"],"date":"2017-11-20T23:00:00.000Z"},"fields":{"slug":"/blog/2017-11-21-spring-mvc-thread-pool-timeouts"}}},{"node":{"id":"82a3bf77-7f90-535a-a5a3-5d66117ed0bb","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2017-11-17-how-not-to-get-crazy.md","excerpt":"We live in XXI century, our lives have become easier thanks to lots of inventions. But have you ever thought about our addiction to technology? It has got to every part of my life and I haven’t even realized that. I wake up thanks to an alarm clock on my mobile phone, during breakfast I check the news on my notebook and all the time I look at my electronic clock to check the time. At university I use PC in laboratories, lecturers show us what they do on their own computers using projectors. I am…","frontmatter":{"excerpt":null,"comments":null,"image":null,"author":"grzesiek","author_id":null,"title":"How not to get crazy?","tags":["technology","addiction"],"date":"2017-11-16T23:00:00.000Z"},"fields":{"slug":"/blog/2017-11-17-how-not-to-get-crazy"}}},{"node":{"id":"9bc58aa7-6fe0-55ed-952f-db7ded0b432a","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2017-11-16-swift-facade-pattern.md","excerpt":"facade image About the pattern Facade pattern is one of the Structural Patterns. The main aim of it is to hide the complexity of a system, class or logic and provide all functionalities behind a simple interface.\nCommonly, Facade is implemented in a way that one class is related to other classes which represents a system logic. Please take a look at the diagram: diagram As you can see, there is one class called Facade which separates the logic from LogicA, LogicB, LogicC classes. As a result our…","frontmatter":{"excerpt":"Facade pattern is one of the Structural Patterns. The main aim of it is to hide the complexity of system, class or logic and provide a simple interface  - use your system easier.","comments":true,"image":"/images/swift-facade-pattern/facade.jpg","author":"kwysocki","author_id":null,"title":"Design Patterns with Swift: Facade pattern","tags":["iOS","swift","design patterns","facade pattern"],"date":"2017-11-15T23:00:00.000Z"},"fields":{"slug":"/blog/2017-11-16-swift-facade-pattern"}}},{"node":{"id":"12a220aa-1116-52f1-9eba-84f8edaca1ca","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2017-11-14-write-native-in-react-native.md","excerpt":"Using custom native components in React Native is a common thing, so sooner or later you may have to write some functionality in a native language and use it in your application. Let me show you a simple example how to do that. toy model First prepare code in a separate application We start with creating a simple native application. In this example, our app will show the user information when the headset is plugged in or out. It involves several native interactions: app lifecycle interaction…","frontmatter":{"excerpt":null,"comments":true,"image":"/images/putting-native-in-rn/toymodel.JPG","author":"radek","author_id":null,"title":"Putting native in React Native on Android","tags":["android","react native","java","platform specific"],"date":"2017-11-13T23:00:00.000Z"},"fields":{"slug":"/blog/2017-11-14-write-native-in-react-native"}}},{"node":{"id":"1858b8c9-9eb2-536e-a4fe-2b09a9af51ed","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2017-11-13-your-first-unit-tested-ethereum-smart-contract.md","excerpt":"The goal of that blog post is to provide you with the exact steps how to start creating your first unit tested smart contract.  My toolbox While writing this article I was using Parity 1.7.8-stable (Parity/v1.7.8-stable-d5fcf3b-20171025/x86_64-macos/rustc1.21.0) as a Ethereum client. You can find an installation guide on this site: Parity - fast, light, and robust Ethereum client or if you are on macOSX or Debian based Linux, please follow instructions described in the next paragraphs…","frontmatter":{"excerpt":null,"comments":null,"image":null,"author":"daniel","author_id":null,"title":"Your first unit tested Ethereum Smart Contract","tags":["smartcontract","ethereum","blockchain","truffle","web3js","parity","unittests"],"date":"2017-11-12T23:00:00.000Z"},"fields":{"slug":"/blog/2017-11-13-your-first-unit-tested-ethereum-smart-contract"}}},{"node":{"id":"a74dba31-5894-5217-863b-32051e48111d","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2017-11-13-do-not-overuse-important.md","excerpt":"You have created your CSS rule and found out that it didn’t take a desired effect. You checked the CSS selector and HTML code again to check if they correspond. Or you just opened the developer console in your browser, inspected the element and checked if your CSS rule was  present in the styles list. It turns out that it is there, but the declarations are strikethrough. This means you have just encountered some kind of CSS specificity issue. You could just add the !important flag to your…","frontmatter":{"excerpt":null,"comments":true,"image":"/images/do-not-overuse-important/important.jpg","author":"agnieszka","author_id":null,"title":"Important: do not overuse !important","tags":["css","important","html","stylesheet"],"date":"2017-11-12T23:00:00.000Z"},"fields":{"slug":"/blog/2017-11-13-do-not-overuse-important"}}},{"node":{"id":"aabb00be-a482-5c00-9b33-bb47439a77e4","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2017-11-12-http-request-logging-in-node.md","excerpt":"One of the most basic kind of logging every backend application should have is a trace logging of all incoming HTTP requests. Yet it's not easy to make it right and useful. Most of the backends we create at Bright nowadays are Node.JS applications based on Express. Although there is a plethora of libraries that are to handle logging for you, we would not be ourselves if we haven't tried to build something on our own (even if only for the sake of knowing the internals better). Let me show you…","frontmatter":{"excerpt":"One of the most basic kind of logging every backend application should have is a trace logging of all incoming HTTP requests. Yet it's not easy to make it right and useful. Let me show you what we have learned and what we do to ensure our logs are meaningful and useful.","comments":true,"image":"/images/node-logging.jpeg","author":"adam","author_id":null,"title":"HTTP request logging in Node.JS","tags":["node.js","logging"],"date":"2017-11-11T23:00:00.000Z"},"fields":{"slug":"/blog/2017-11-12-http-request-logging-in-node"}}},{"node":{"id":"6f71e8e0-b819-5426-bc6d-592975dcf836","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2017-11-11-teamcity-for-ios-project.md","excerpt":"Hi! Today's topic will be about TeamCity and how to provide continuous integration in your iOS project. title image Motivation I have configured a TeamCity many times and for many projects. There are many advantages of using Continuous Integration system in your project development process. Also, there is a lot of alternatives to TeamCity like CircleCI, TravisCI and many more. But in this post I want to share with you TeamCity experience that I have gained at  Bright Inventions. Every project…","frontmatter":{"excerpt":"Hi! Today's topic will be about TeamCity and how to provide continuous integration in your iOS project.","comments":true,"image":"/images/teamcity-for-ios-project/title_image.jpg","author":"kwysocki","author_id":null,"title":"TeamCity for iOS project","tags":["iOS","swift","Fastlane","TeamCity","continuous integration"],"date":"2017-11-10T23:00:00.000Z"},"fields":{"slug":"/blog/2017-11-11-teamcity-for-ios-project"}}},{"node":{"id":"cc321b78-ec52-528d-8532-9c6b7d3ae1f8","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2017-11-05-http-client-timeouts.md","excerpt":"We have already touched upon the importance of timeouts and described most important related JDBC knobs. The next aspect of timeouts I would like to focus on is using API clients. Specifically HTTP clients which are by far the most popular. We will review couple of popular HTTP client libraries and their configuration regarding timeouts.  Waiting HttpURLConnection timeouts HttpURLConnection available since JDK 1.1 has gained the ability to timeout its network communication in version JDK 5. The…","frontmatter":{"excerpt":null,"comments":true,"image":"/images/http-client-timeouts/waiting.jpg","author":"piotr","author_id":null,"title":"HTTP client timeouts","tags":["http","timeout","network","rest","api"],"date":"2017-11-04T23:00:00.000Z"},"fields":{"slug":"/blog/2017-11-05-http-client-timeouts"}}}]}},"pageContext":{"limit":10,"skip":110,"numPages":23,"currentPage":12}}}
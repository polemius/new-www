{"componentChunkName":"component---src-templates-post-template-tsx","path":"/blog/spring-mvc-request-timeout","result":{"data":{"markdownRemark":{"html":"<p><a href=\"%7B%25%20post_url%202017-11-21-spring-mvc-thread-pool-timeouts%20%25%7D\">As we saw previously</a>, we only have limited options to configure maximum time a request processing can take in Spring MVC. In this post I will show how to enforce such timeout through a custom  <a href=\"https://docs.oracle.com/cd/B14099_19/web.1012/b14017/filters.htm\">Servlet Filter</a>.</p>\n<p><img src=\"/images/spring-mvc-request-timeout/late.jpg\" alt=\"Late request\"></p>\n<h2>Request timeout Servlet Filter</h2>\n<p>Without further ado let us dive right into a sample filter implementation in Kotlin:</p>\n<pre><code class=\"language-kotlin\">@Component\n@Order(Ordered.HIGHEST_PRECEDENCE)\nclass TimeoutFilter : OncePerRequestFilter() {\n    override fun doFilterInternal(request: HttpServletRequest, response: HttpServletResponse, filterChain: FilterChain) {\n        val completed = AtomicBoolean(false)\n        val requestHandlingThread = Thread.currentThread()\n        val timeout = timeoutsPool.schedule({\n            if (completed.compareAndSet(false, true)) {\n                requestHandlingThread.interrupt()\n            }\n        }, 5, TimeUnit.SECONDS)\n\n        try {\n            filterChain.doFilter(request, response)\n            timeout.cancel(false)\n        } finally {\n            completed.set(true)\n        }\n    }\n\n    companion object {\n        private val timeoutsPool = Executors.newScheduledThreadPool(10)\n    }\n\n    @ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)\n    class TimeoutException(message: String) : java.util.concurrent.TimeoutException(message)\n}\n</code></pre>\n<p>The above code declares a Servlet Filter that will interrupt thread processing a request after 5 seconds. There are couple of interesting points about how it works.</p>\n<ul>\n<li><code>@Order(Ordered.HIGHEST_PRECEDENCE)</code> puts the Filter at the beginning of filter chain</li>\n<li><code>val completed = AtomicBoolean(false)</code> denotes whether the request processing completed. </li>\n<li><code>val timeoutsPool = Executors.newScheduledThreadPool(10)</code> creates a thread pool responsible for running timeouts. The <code>newScheduledThreadPool</code> creates a thread pool that is efficient at running delayed tasks.</li>\n<li><code>timeoutsPool.schedule({ ... })</code> schedules a code that will interrupt <code>requestHandlingThread</code> after 5 seconds</li>\n<li><code>completed.compareAndSet(false, true)</code> updates the <code>completed</code> flag in a thread safe fashion</li>\n</ul>\n<h2>Testing request timeout Servlet Filter</h2>\n<p>For the test purposes let us create a simple Spring Boot MVC application written in Kotlin:</p>\n<pre><code class=\"language-kotlin\">@SpringBootApplication\n@EnableWebMvc\nclass Application {\n    companion object {\n        @JvmStatic\n        fun main(args: Array&#x3C;String>) {\n            SpringApplication.run(Application::class.java)\n        }\n    }\n}\n\n@RestController\nclass TimeoutController {\n    @GetMapping(\"/timeout\")\n    fun timeout(@RequestParam(required = false) timeoutInMillis: Long?): ResponseEntity&#x3C;*> {\n        Thread.sleep(timeoutInMillis ?: 1000)\n        return ResponseEntity.ok(\"completed\")\n    }\n}\n</code></pre>\n<p>The <code>TimeoutController</code> will sleep for an amount of time given in a parameter. Let's simulate a short request with <a href=\"https://httpie.org/\"><code>httpie</code></a>:</p>\n<pre><code class=\"language-bash\">http :8080/timeout timeoutInMillis==2000\n\nHTTP/1.1 200 \nContent-Length: 9\nContent-Type: text/plain;charset=ISO-8859-1\nDate: Mon, 27 Nov 2017 12:19:03 GMT\n\ncompleted\n</code></pre>\n<p>This was the happy path. Now let's try a timeout path:</p>\n<pre><code class=\"language-bash\">http  :8080/timeout timeoutInMillis==6000       \n\nHTTP/1.1 500 \nConnection: close\nContent-Type: application/json;charset=UTF-8\nDate: Mon, 27 Nov 2017 12:21:30 GMT\nTransfer-Encoding: chunked\n\n{\n    \"error\": \"Internal Server Error\",\n    \"exception\": \"java.lang.InterruptedException\",\n    \"message\": \"sleep interrupted\",\n    \"path\": \"/timeout\",\n    \"status\": 500,\n    \"timestamp\": 1511785290518\n}\n</code></pre>\n<p>As you can see in the exception message, we see that the <code>Thread.sleep</code> in the controller action has been interrupted üéâ</p>\n<h2>A word of warning</h2>\n<p>The above Servlet Filter will not work if we use <a href=\"https://docs.oracle.com/javaee/7/tutorial/servlets012.htm\">Async Servlet Filters</a>. When using Async Servlet Filter there is typically <strong>more than 1</strong> thread that handles a request hence the above approach will not work. Having said that if you use Async Servlet Filter there already is a way to apply a timeout that <a href=\"https://docs.oracle.com/javaee/6/api/javax/servlet/AsyncContext.html#setTimeout(long)\">is defined by the API</a>. Another important point is to check how the request processing thread pool handles interrupted threads. <a href=\"%25%20post_url%202017-11-21-spring-mvc-thread-pool-timeouts%20%25%7D\">As we have discussed earlier</a>, the concrete implementation of thread pool used to process request depends on servlet container and configured used in the application. We should make sure that the interrupted thread is eventually replaced with a new thread by the pool so that timeouts do not change the effective thread pool size.</p>","excerpt":"As we saw previously, we only have limited options to configure maximum time a request processing can take in Spring MVC. In this post I‚Ä¶","frontmatter":{"slug":null,"title":"Request timeouts in Spring MVC","description":null,"author":"piotr","tags":["spring","mvc","spring-boot","request","timeout"],"date":"2017-11-27T23:00:00.000Z","image":"/images/spring-mvc-request-timeout/late.jpg"},"timeToRead":3,"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2017-11-28-spring-mvc-request-timeout.md"},"allMarkdownRemark":{"nodes":[{"frontmatter":{"author_id":"adam","avatar":"/images/members/adam_bar.jpg","bio":"The Web Guy @ Bright Inventions","name":"Adam Bar","web":"https://whatwebcando.today"}},{"frontmatter":{"author_id":"agnieszka_h","avatar":"/images/members/agnieszka_h.jpg","bio":"Sales Manager @ Bright Inventions","name":"Agnieszka Hayashida","web":null}},{"frontmatter":{"author_id":"agnieszka","avatar":"/images/members/agnieszka_olszewska.jpg","bio":"Fullstack developer","name":"Agnieszka Olszewska","web":null}},{"frontmatter":{"author_id":"olo","avatar":"/images/members/aleksander_wielgorski.jpeg","bio":"Software Engineer @ Bright Inventions","name":"Aleksander Wielg√≥rski","web":null}},{"frontmatter":{"author_id":"alisa","avatar":"/images/members/alisa_kashytska.jpg","bio":"Product designer","name":"Alisa Kashytska","web":null}},{"frontmatter":{"author_id":"azabost","avatar":"/images/members/andrzej_zabost.jpg","bio":"Senior Android developer","name":"Andrzej Zabost","web":"https://azabost.com"}},{"frontmatter":{"author_id":"arturs","avatar":"/images/members/artur.jpg","bio":"iOS developer","name":"Artur Suli≈Ñski","web":null}},{"frontmatter":{"author_id":"bartek k","avatar":"/images/members/bartek_krzyzanski.jpg","bio":"Backend developer","name":"Bartek Krzy≈ºa≈Ñski","web":null}},{"frontmatter":{"author_id":"bartekr","avatar":"/images/members/bartek.jpg","bio":"iOS developer","name":"Bartek Rozwarski","web":null}},{"frontmatter":{"author_id":"bartosz","avatar":"/images/members/bartosz_szafran.jpg","bio":"Senior Frontend Developer","name":"Bartosz Szafran","web":null}},{"frontmatter":{"author_id":"daniel","avatar":"/images/members/daniel_makurat.jpg","bio":"Co-founder & Senior Backend developer","name":"Daniel Makurat","web":null}},{"frontmatter":{"author_id":"eliasz","avatar":"/images/members/eliasz.png","bio":"Software Engineer @ Bright Inventions","name":"Eliasz Sawicki","web":"http://eluss.github.io/"}},{"frontmatter":{"author_id":"fjablonski","avatar":"/images/members/filip_jablonski.jpg","bio":"Senior iOS developer","name":"Filip Jab≈Ço≈Ñski","web":null}},{"frontmatter":{"author_id":"grzesiek","avatar":"/images/members/grzegorz_ciesla.jpg","bio":"Software Developer","name":"Grzegorz Cie≈õla","web":null}},{"frontmatter":{"author_id":"ivan","avatar":"/images/members/ivan.jpg","bio":"Fullstack developer","name":"Ivan Menshykov","web":null}},{"frontmatter":{"author_id":"janek","avatar":"/images/members/janhanc.jpg","bio":"Frontend developer","name":"Jan Hanc","web":null}},{"frontmatter":{"author_id":"kwysocki","avatar":"/images/members/kamil.png","bio":"Software Engineer @ Bright Inventions","name":"Kamil Wysocki","web":"https://wysockikamil.com"}},{"frontmatter":{"author_id":"karoln","avatar":"/images/members/karol_nadratowski.jpg","bio":null,"name":"Karol Nadratowski","web":null}},{"frontmatter":{"author_id":"karol r","avatar":"/images/members/karol_rinc.jpg","bio":"Backend developer","name":"Karol Rinc","web":null}},{"frontmatter":{"author_id":"kasia","avatar":"/images/members/kasia_lukasiewicz.jpg","bio":"Senior Project Manager","name":"Kasia ≈Åukasiewicz","web":null}},{"frontmatter":{"author_id":"kasia g","avatar":"/images/members/katarzyna_galka.jpg","bio":"Project manager","name":"Katarzyna Ga≈Çka","web":null}},{"frontmatter":{"author_id":"krzysiek h","avatar":"/images/members/krzysztof_hinc.jpg","bio":"Web developer","name":"Krzysiek Hinc","web":null}},{"frontmatter":{"author_id":"krzysiek","avatar":"/images/members/krzysztof_kaczmarek.jpg","bio":"Senior iOS Developer","name":"Krzysztof Kaczmarek","web":null}},{"frontmatter":{"author_id":"maciej","avatar":"/images/members/maciej_seleman.jpg","bio":"QA Specialist","name":"Maciej Seleman","web":null}},{"frontmatter":{"author_id":"magda","avatar":"/images/members/magda_sadowska.jpg","bio":"Office & HR Assistant","name":"Magda Sadowska","web":null}},{"frontmatter":{"author_id":"maja","avatar":"/images/members/maja_puta.jpg","bio":"Junior QA Specialist","name":"Maja Puta","web":null}},{"frontmatter":{"author_id":"marcink","avatar":"/images/members/marcin_kwiatkowski.jpg","bio":null,"name":"Marcin Kwiatkowski","web":null}},{"frontmatter":{"author_id":"mateusz","avatar":"/images/members/mateusz_klimczak.jpg","bio":"Technical leader & Project manager","name":"Mateusz Klimczak","web":null}},{"frontmatter":{"author_id":"mateuszklimek","avatar":"/images/members/mateuszklimek.png","bio":"Software Engineer @ Bright Inventions","name":"Mateusz Klimek","web":null}},{"frontmatter":{"author_id":"michal k","avatar":"/images/members/michal_koszalka.jpg","bio":"Senior Backend developer","name":"Micha≈Ç Kosza≈Çka","web":null}},{"frontmatter":{"author_id":"micha≈Ç","avatar":"/images/members/michal_wrobel.jpg","bio":"Senior Backend Developer at Bright Inventions","name":"Micha≈Ç Wr√≥bel","web":null}},{"frontmatter":{"author_id":"michal","avatar":"/images/members/micha≈Ç_≈Çukasiewicz.jpg","bio":"Co-founder & Senior iOS developer","name":"Micha≈Ç ≈Åukasiewicz","web":null}},{"frontmatter":{"author_id":"monika","avatar":"/images/members/monika.jpg","bio":"Software Developer @ Bright Inventions","name":"Monika Niegrzybowska","web":null}},{"frontmatter":{"author_id":"nikodem","avatar":"/images/members/nikodem_kalinowski.jpg","bio":"Web developer","name":"Nikodem Kalinowski","web":null}},{"frontmatter":{"author_id":"patryk","avatar":"/images/members/patryk_huzarski.jpg","bio":"Software Developer @ Bright Inventions","name":"Patryk Huzarski","web":null}},{"frontmatter":{"author_id":"patryk sz","avatar":"/images/members/patryk_szlagowski.jpg","bio":"Senior Backend developer","name":"Patryk Szlagowski","web":null}},{"frontmatter":{"author_id":"pawe≈Ç","avatar":"/images/members/pawe≈Ç_gutkowski.jpg","bio":"Fullstack Developer at Bright Inventions ","name":"Pawe≈Ç Gutkowski","web":null}},{"frontmatter":{"author_id":"pawel","avatar":"/images/members/pawe≈Ç_papkiewicz.jpg","bio":"Fullstack developer","name":"Pawe≈Ç Papkiewicz","web":null}},{"frontmatter":{"author_id":"piotr","avatar":"/images/members/piotr_mionskowski.jpg","bio":"TDD fan eager to learn new things","name":"Piotr Mionskowski","web":"https://miensol.pl"}},{"frontmatter":{"author_id":"piotr_l","avatar":"/images/members/piotrl.png","bio":"Android Developer @ Bright Inventions","name":"Piotr ≈Åupi≈Ñski","web":"http://exp.flamaster2.com"}},{"frontmatter":{"author_id":"radek","avatar":"/images/members/radek_pieczaÃ®tkiewicz.jpg","bio":"Android developer","name":"Radek PieczƒÖtkiewicz","web":null}},{"frontmatter":{"author_id":"radeks","avatar":"/images/members/radoslaw.jpg","bio":"Software Engineer @ Bright Inventions","name":"Rados≈Çaw S≈Çowi≈Ñski","web":null}},{"frontmatter":{"author_id":"rafal h","avatar":"/images/members/rafal_hoffman.jpg","bio":"Fullstack developer","name":"Rafa≈Ç Hofman","web":null}},{"frontmatter":{"author_id":"sebastian","avatar":"/images/members/sebastian_sobczak.jpg","bio":"Junior Account Manager at Bright Inventions ","name":"Sebastian Sobczak","web":null}},{"frontmatter":{"author_id":"szymek","avatar":"/images/members/szymon_miloch.jpg","bio":"Android & Web developer","name":"Szymon Miloch","web":null}},{"frontmatter":{"author_id":"tomek","avatar":"/images/members/tomek.jpeg","bio":null,"name":"Tomasz Gƒôsior","web":null}},{"frontmatter":{"author_id":"ula","avatar":"/images/members/ula_stankiewicz.jpg","bio":"HR & Marketing Manager","name":"Ula Stankiewicz","web":null}},{"frontmatter":{"author_id":"wojciech","avatar":"/images/members/wojciech_baczynÃÅski.jpg","bio":"Fullstack developer","name":"Wojciech Baczy≈Ñski","web":null}},{"frontmatter":{"author_id":"lukasz","avatar":"/images/members/lukasz_reszetow.jpg","bio":"Android developer","name":"≈Åukasz Reszetow","web":null}}]},"site":{"siteMetadata":{"siteUrl":"https://brightinventions.pl"}}},"pageContext":{"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2017-11-28-spring-mvc-request-timeout.md"}}}
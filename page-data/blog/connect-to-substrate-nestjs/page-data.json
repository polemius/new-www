{"componentChunkName":"component---src-templates-post-template-tsx","path":"/blog/connect-to-substrate-nestjs","result":{"data":{"markdownRemark":{"html":"<h2>Create a sample NestJS project</h2>\n<p>First of all, we should create a NestJS project.\nPlease use the <a href=\"https://github.com/nestjs/nest-cli\">nest-cli</a> to generate the project template:</p>\n<pre><code>nest new substrate-nests\ncd substrate-nests\n</code></pre>\n<p>This commands generate for us a sample project with one module and generate code for one GET API endpoint:</p>\n<pre><code class=\"language-sh\">src\n├── app.controller.spec.ts\n├── app.controller.ts\n├── app.module.ts\n├── app.service.ts\n└── main.ts\n</code></pre>\n<p>After you successfully create the sample project you could run the dev server:</p>\n<pre><code>yarn start:dev\n</code></pre>\n<p>This command runs dev server and now you can see text <em>Hello World!</em> if you open <a href=\"http://localhost:3000/\">http://localhost:3000/</a>.</p>\n<h2>Connecting to substrate</h2>\n<h3>Preparation</h3>\n<p>To connect to the substrate node we will be using the library <a href=\"https://github.com/polkadot-js\">polkadot-js</a>.\nPlease, add this library to dependency:</p>\n<pre><code class=\"language-sh\">yarn add @polkadot/api\n</code></pre>\n<p>To work with this library please set flag <code>esModuleInterop</code> to <code>true</code> in <code>tsconfig.json</code> file and restart the dev server.</p>\n<p>Now you can add necessary imports to <code>app.service.ts</code> file:</p>\n<pre><code>import { ApiPromise, WsProvider, Keyring } from '@polkadot/api';\n</code></pre>\n<p>The next thing we should set is the URL where our node exists.\nPlease add these lines after the import section in <code>app.service.ts</code> file:</p>\n<pre><code>const SUBSTRATE_URL = 'wss://dev-node.substrate.dev:9944'; // dev node of substrate blockchain\n// const SUBSTRATE_URL = 'ws://127.0.0.1:9944'; // if you have substrate install locally you can use this address\n</code></pre>\n<p>We are going to connect to the substrate node in <code>onModuleInit</code> lifecycle function. It allows us to connect to the node after module initialized.</p>\n<pre><code>@Injectable()\nexport class AppService implements OnModuleInit { // class should implement OnModuleInit interface\n  private api: ApiPromise;\n\n  // please, add this function to your class\n  async onModuleInit() {\n    Logger.log('Connecting to substrate chain...');\n    const wsProvider = new WsProvider(SUBSTRATE_URL);\n    this.api = await ApiPromise.create({ provider: wsProvider });\n  }\n</code></pre>\n<p>After the restart you could see our message in logs:</p>\n<pre><code>[Nest] 6701   - 04/07/2020, 1:21:02 PM   [NestFactory] Starting Nest application...\n[Nest] 6701   - 04/07/2020, 1:21:02 PM   [InstanceLoader] AppModule dependencies initialized +13ms\n[Nest] 6701   - 04/07/2020, 1:21:02 PM   [RoutesResolver] AppController {/}: +5ms\n[Nest] 6701   - 04/07/2020, 1:21:02 PM   [RouterExplorer] Mapped {/, GET} route +2ms\n[Nest] 6701   - 04/07/2020, 1:21:02 PM   Connecting to substrate chain... +1ms\n</code></pre>\n<h3>Getting data</h3>\n<p>For the test purposes, we will get the chain name, node name, version, the number of the latest block and the current timestamp.\nFor this let's create the new function in <code>AppService</code> class:</p>\n<pre><code>async getSimpleData() {\n  await this.api.isReady;\n}\n</code></pre>\n<p>The first line in the function <code>getSimpleData</code> waits until our connection to substrate node will be ready.</p>\n<p>Now we can add code to get the data:</p>\n<pre><code>async getSimpleData() {\n  await this.api.isReady;\n\n  const chain = await this.api.rpc.system.chain();\n  const nodeName = this.api.rpc.system.name();\n  const nodeVersion = this.api.rpc.system.version();\n  const header = this.api.rpc.chain.getHeader();\n  const now = await this.api.query.timestamp.now();\n\n  return {\n    chain,\n    nodeName,\n    nodeVersion,\n    headerNumber: header.number,\n    now\n  };\n}\n</code></pre>\n<p>After we create this function we could change our endpoint's code to respond with this data.\nPlease update the function <code>getHello</code> in <code>AppController</code> with this code:</p>\n<pre><code>@Get()\nasync getHello(): Promise&#x3C;string> {\n  const data = await this.appService.getSimpleData();\n\n  return `\n    Chain: ${data.chain}&#x3C;br/>\n    Node name: ${data.nodeName}&#x3C;br/>\n    Node version: ${data.nodeVersion}&#x3C;br/>\n    Number of latest block: ${data.headerNumber}&#x3C;br/>\n    Now: ${new Date(Number(data.now.toString())).toISOString()}&#x3C;br />\n  `;\n}\n</code></pre>\n<p>Here we just create a simple response with the collected data.\nAfter the server has successfully restarted you can open <a href=\"http://localhost:3000/\">http://localhost:3000/</a> and see the result:</p>\n<p><img src=\"/images/connect-to-substrate-nestjs/result.png\" alt=\"Result\"></p>\n<p>The next thing that we can do is getting the balance of some account.</p>\n<p>Please add to the function <code>getSimpleData</code> the following lines:</p>\n<pre><code>  const ADDR = '5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY';\n  const now = await this.api.query.timestamp.now();\n\n  // to get balance will be used the different method depends of substrate version\n  const balance = await this.api.query.balances.freeBalance(ADDR);\n  // or this\n  // const { data } = await this.api.query.system.account(ADDR);\n  // const balance = data.free;\n  \n  return {\n    chain,\n    nodeName,\n    nodeVersion,\n    headerNumber: header.number,\n    now,\n    balance,\n  };\n}\n</code></pre>\n<p>The address <code>5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY</code> is a predefined test account for testing purpose.\nIf you are creating a substrate chain from the <a href=\"https://substrate.dev/docs/en/tutorials/creating-your-first-substrate-chain/\">tutorial</a> then you will have this account.</p>\n<p>Depends on what version of substate node you are trying to connect the function <code>account()</code> can be not defined.\nIn this case please use function <code>freeBalance()</code>.\nThe function <code>freeBalance</code> is depreciated, for now, please read more about it in <a href=\"https://polkadot.js.org/api/start/FAQ.html#my-chain-does-not-support-system-account-queries\">polkadot FAQ</a>.</p>\n<p>Also, we need to update <code>AppController</code>. Please add the line <code>Balance: ${data.balance}</code> to the returned template literal:\nThe <code>Balance</code> is a <a href=\"https://substrate.dev/docs/en/development/module/#what-is-a-pallet\">Pallet</a> defines a cryptocurrency for blockchain.</p>\n<pre><code>@Get()\nasync getHello(): Promise&#x3C;string> {\n  const data = await this.appService.getSimpleData();\n\n  return `\n    Chain: ${data.chain}&#x3C;br/>\n    Node name: ${data.nodeName}&#x3C;br/>\n    Node version: ${data.nodeVersion}&#x3C;br/>\n    Number of latest block: ${data.headerNumber}&#x3C;br/>\n    Now: ${new Date(Number(data.now.toString())).toISOString()}&#x3C;br />\n    Balance: ${data.balance}\n  `;\n}\n</code></pre>\n<p>Now you could check the changes on <a href=\"http://localhost:3000/\">http://localhost:3000/</a>:</p>\n<p><img src=\"/images/connect-to-substrate-nestjs/result2.png\" alt=\"Result with balance\"></p>\n<p>All code you can find in this repository: <a href=\"https://github.com/janczer/substrate-nestjs\">https://github.com/janczer/substrate-nestjs</a></p>\n<p>What next?</p>\n<p>You could take a look of polkadot API: <a href=\"https://polkadot.js.org/api/start/\">polkadot-js/api</a></p>\n<p>If you haven't run the node locally, you can try this tutorial: <a href=\"https://substrate.dev/docs/en/tutorials/creating-your-first-substrate-chain/\">Creating Your First Substrate Chain</a></p>\n<p>After that you can try to write your first contract: <a href=\"https://substrate.dev/substrate-contracts-workshop/#/\">ink! Smart Contracts Tutorial</a></p>","excerpt":"Create a sample NestJS project First of all, we should create a NestJS project.\nPlease use the nest-cli to generate the project template…","frontmatter":{"slug":null,"title":"Connecting to Substrate blockchain from NestJS","description":null,"author":"ivan","tags":["blockchain","nestjs","javascript","substrate"],"date":"2020-04-07T10:41:51.004Z","image":"/images/ivan_substrateblockchain-copy.png"},"timeToRead":5,"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2020-04-07-connect-to-substrate-nestjs.md"},"allMarkdownRemark":{"nodes":[{"frontmatter":{"author_id":"adam","avatar":"/images/members/adam_bar.jpg","bio":"The Web Guy @ Bright Inventions","name":"Adam Bar","web":"https://whatwebcando.today"}},{"frontmatter":{"author_id":"agnieszka_h","avatar":"/images/members/agnieszka_h.jpg","bio":"Sales Manager @ Bright Inventions","name":"Agnieszka Hayashida","web":null}},{"frontmatter":{"author_id":"agnieszka","avatar":"/images/members/agnieszka_olszewska.jpg","bio":"Fullstack developer","name":"Agnieszka Olszewska","web":null}},{"frontmatter":{"author_id":"olo","avatar":"/images/members/aleksander_wielgorski.jpeg","bio":"Software Engineer @ Bright Inventions","name":"Aleksander Wielgórski","web":null}},{"frontmatter":{"author_id":"alisa","avatar":"/images/members/alisa_kashytska.jpg","bio":"Product designer","name":"Alisa Kashytska","web":null}},{"frontmatter":{"author_id":"azabost","avatar":"/images/members/andrzej_zabost.jpg","bio":"Senior Android developer","name":"Andrzej Zabost","web":"https://azabost.com"}},{"frontmatter":{"author_id":"arturs","avatar":"/images/members/artur.jpg","bio":"iOS developer","name":"Artur Suliński","web":null}},{"frontmatter":{"author_id":"bartek k","avatar":"/images/members/bartek_krzyzanski.jpg","bio":"Backend developer","name":"Bartek Krzyżański","web":null}},{"frontmatter":{"author_id":"bartekr","avatar":"/images/members/bartek.jpg","bio":"iOS developer","name":"Bartek Rozwarski","web":null}},{"frontmatter":{"author_id":"bartosz","avatar":"/images/members/bartosz_szafran.jpg","bio":"Senior Frontend Developer","name":"Bartosz Szafran","web":null}},{"frontmatter":{"author_id":"daniel","avatar":"/images/members/daniel_makurat.jpg","bio":"Co-founder & Senior Backend developer","name":"Daniel Makurat","web":null}},{"frontmatter":{"author_id":"eliasz","avatar":"/images/members/eliasz.png","bio":"Software Engineer @ Bright Inventions","name":"Eliasz Sawicki","web":"http://eluss.github.io/"}},{"frontmatter":{"author_id":"fjablonski","avatar":"/images/members/filip_jablonski.jpg","bio":"Senior iOS developer","name":"Filip Jabłoński","web":null}},{"frontmatter":{"author_id":"grzesiek","avatar":"/images/members/grzegorz_ciesla.jpg","bio":"Software Developer","name":"Grzegorz Cieśla","web":null}},{"frontmatter":{"author_id":"ivan","avatar":"/images/members/ivan.jpg","bio":"Fullstack developer","name":"Ivan Menshykov","web":null}},{"frontmatter":{"author_id":"janek","avatar":"/images/members/janhanc.jpg","bio":"Frontend developer","name":"Jan Hanc","web":null}},{"frontmatter":{"author_id":"kwysocki","avatar":"/images/members/kamil.png","bio":"Software Engineer @ Bright Inventions","name":"Kamil Wysocki","web":"https://wysockikamil.com"}},{"frontmatter":{"author_id":"karoln","avatar":"/images/members/karol_nadratowski.jpg","bio":null,"name":"Karol Nadratowski","web":null}},{"frontmatter":{"author_id":"karol r","avatar":"/images/members/karol_rinc.jpg","bio":"Backend developer","name":"Karol Rinc","web":null}},{"frontmatter":{"author_id":"kasia","avatar":"/images/members/kasia_lukasiewicz.jpg","bio":"Senior Project Manager","name":"Kasia Łukasiewicz","web":null}},{"frontmatter":{"author_id":"kasia g","avatar":"/images/members/katarzyna_galka.jpg","bio":"Project manager","name":"Katarzyna Gałka","web":null}},{"frontmatter":{"author_id":"krzysiek h","avatar":"/images/members/krzysztof_hinc.jpg","bio":"Web developer","name":"Krzysiek Hinc","web":null}},{"frontmatter":{"author_id":"krzysiek","avatar":"/images/members/krzysztof_kaczmarek.jpg","bio":"Senior iOS Developer","name":"Krzysztof Kaczmarek","web":null}},{"frontmatter":{"author_id":"maciej","avatar":"/images/members/maciej_seleman.jpg","bio":"QA Specialist","name":"Maciej Seleman","web":null}},{"frontmatter":{"author_id":"magda","avatar":"/images/members/magda_sadowska.jpg","bio":"Office & HR Assistant","name":"Magda Sadowska","web":null}},{"frontmatter":{"author_id":"maja","avatar":"/images/members/maja_puta.jpg","bio":"Junior QA Specialist","name":"Maja Puta","web":null}},{"frontmatter":{"author_id":"marcink","avatar":"/images/members/marcin_kwiatkowski.jpg","bio":null,"name":"Marcin Kwiatkowski","web":null}},{"frontmatter":{"author_id":"mateusz","avatar":"/images/members/mateusz_klimczak.jpg","bio":"Technical leader & Project manager","name":"Mateusz Klimczak","web":null}},{"frontmatter":{"author_id":"mateuszklimek","avatar":"/images/members/mateuszklimek.png","bio":"Software Engineer @ Bright Inventions","name":"Mateusz Klimek","web":null}},{"frontmatter":{"author_id":"michal k","avatar":"/images/members/michal_koszalka.jpg","bio":"Senior Backend developer","name":"Michał Koszałka","web":null}},{"frontmatter":{"author_id":"michał","avatar":"/images/members/michal_wrobel.jpg","bio":"Senior Backend Developer at Bright Inventions","name":"Michał Wróbel","web":null}},{"frontmatter":{"author_id":"michal","avatar":"/images/members/michał_łukasiewicz.jpg","bio":"Co-founder & Senior iOS developer","name":"Michał Łukasiewicz","web":null}},{"frontmatter":{"author_id":"monika","avatar":"/images/members/monika.jpg","bio":"Software Developer @ Bright Inventions","name":"Monika Niegrzybowska","web":null}},{"frontmatter":{"author_id":"nikodem","avatar":"/images/members/nikodem_kalinowski.jpg","bio":"Web developer","name":"Nikodem Kalinowski","web":null}},{"frontmatter":{"author_id":"patryk","avatar":"/images/members/patryk_huzarski.jpg","bio":"Software Developer @ Bright Inventions","name":"Patryk Huzarski","web":null}},{"frontmatter":{"author_id":"patryk sz","avatar":"/images/members/patryk_szlagowski.jpg","bio":"Senior Backend developer","name":"Patryk Szlagowski","web":null}},{"frontmatter":{"author_id":"paweł","avatar":"/images/members/paweł_gutkowski.jpg","bio":"Fullstack Developer at Bright Inventions ","name":"Paweł Gutkowski","web":null}},{"frontmatter":{"author_id":"pawel","avatar":"/images/members/paweł_papkiewicz.jpg","bio":"Fullstack developer","name":"Paweł Papkiewicz","web":null}},{"frontmatter":{"author_id":"piotr","avatar":"/images/members/piotr_mionskowski.jpg","bio":"TDD fan eager to learn new things","name":"Piotr Mionskowski","web":"https://miensol.pl"}},{"frontmatter":{"author_id":"piotr_l","avatar":"/images/members/piotrl.png","bio":"Android Developer @ Bright Inventions","name":"Piotr Łupiński","web":"http://exp.flamaster2.com"}},{"frontmatter":{"author_id":"radek","avatar":"/images/members/radek_pieczątkiewicz.jpg","bio":"Android developer","name":"Radek Pieczątkiewicz","web":null}},{"frontmatter":{"author_id":"radeks","avatar":"/images/members/radoslaw.jpg","bio":"Software Engineer @ Bright Inventions","name":"Radosław Słowiński","web":null}},{"frontmatter":{"author_id":"rafal h","avatar":"/images/members/rafal_hoffman.jpg","bio":"Fullstack developer","name":"Rafał Hofman","web":null}},{"frontmatter":{"author_id":"sebastian","avatar":"/images/members/sebastian_sobczak.jpg","bio":"Junior Account Manager at Bright Inventions ","name":"Sebastian Sobczak","web":null}},{"frontmatter":{"author_id":"szymek","avatar":"/images/members/szymon_miloch.jpg","bio":"Android & Web developer","name":"Szymon Miloch","web":null}},{"frontmatter":{"author_id":"tomek","avatar":"/images/members/tomek.jpeg","bio":null,"name":"Tomasz Gęsior","web":null}},{"frontmatter":{"author_id":"ula","avatar":"/images/members/ula_stankiewicz.jpg","bio":"HR & Marketing Manager","name":"Ula Stankiewicz","web":null}},{"frontmatter":{"author_id":"wojciech","avatar":"/images/members/wojciech_baczyński.jpg","bio":"Fullstack developer","name":"Wojciech Baczyński","web":null}},{"frontmatter":{"author_id":"lukasz","avatar":"/images/members/lukasz_reszetow.jpg","bio":"Android developer","name":"Łukasz Reszetow","web":null}}]},"site":{"siteMetadata":{"siteUrl":"https://brightinventions.pl"}}},"pageContext":{"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2020-04-07-connect-to-substrate-nestjs.md"}}}
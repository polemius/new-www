{"componentChunkName":"component---src-templates-post-template-tsx","path":"/blog/3dtouch-peak-and-pop","result":{"data":{"markdownRemark":{"html":"<p>In my previous post I wrote about adopting UIApplicationShortcutItems in your app. Now it's time to implement Peak&#x26;Pop - a feature provided by 3d Touch.</p>\n<p><img src=\"https://raw.githubusercontent.com/kamwysoc/kamwysoc.github.io/master/assets/posts/3dTouch/pexels-photo-59672.jpeg\"></p>\n<h2>Get started</h2>\n<p>First of all we need to check if our device supports force touch events. Then if our device is familiar with force touch we can easily register our <code>UIViewController</code> for force touch events. Take a look at this snippet:</p>\n<script src=\"https://gist.github.com/kamwysoc/a08f80ddcc3f064a881650cc2dafc1eb.js\"></script>\n<p>As you can see the above code uses the <code>traitCollection</code> property. It is available in every <code>UIViewController</code> and provides information about controller environment. In documentation we can read about it:</p>\n<blockquote>\n<p>A trait collection encapsulates the system traits of an interface's environment</p>\n</blockquote>\n<p>So when we access <code>traitCollection</code> and get information about <code>forceTouchCapability</code>. It will return one of these values:</p>\n<script src=\"https://gist.github.com/kamwysoc/6f1cc95592658e495ef6a39b5e6df153.js\"></script>\n<p>Another method that needs some attention is <code>registerForPreviewing</code>. It register <code>UIViewController</code> for force touch events. Documentation:</p>\n<blockquote>\n<p>Registers a view controller to participate with 3D Touch preview (peek) and commit (pop).</p>\n</blockquote>\n<p>There is also <code>unregisterForPreviewing(withContext previewing: UIViewControllerPreviewing)</code> function available. After unregistering, all features related to 3d Touch will be turned off for view controller that called <code>unregisterForPreviewing</code> method.</p>\n<h2>All registered, what's next?</h2>\n<p>We should take a look on <code>UIViewControllerPreviewingDelegate</code> - this delegate class is responsible for handling events from 3d Touch in view controller that implements methods of this delegate.</p>\n<p>There are two methods:</p>\n<script src=\"https://gist.github.com/kamwysoc/aff420c55492b809990e170dedddaade.js\"></script>\n<p>First method is responsible for catching force-touch events. For example if you firmly press some view in <code>UIViewController</code>, that conform to <code>UIViewControllerPreviewingDelegate</code>, the method will be called once until you release your finger or press more strongly the view. As you can see this method returns an optional <code>UIViewController?</code>. The controller returned from this function is used for action called Peek. There is also a second parameter named <code>location</code> it will give you an information about at what <code>CGPoint</code> in ViewController's view, the app received force touch. Here you can see what the Peak looks like:</p>\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/kamwysoc/kamwysoc.github.io/master/assets/posts/3dTouch/peak.gif\"/>\n</p>\n<p>Second method is responsible for an event called Pop. When the 3d touch mechanism detects that you strongly pressed the <code>ViewController</code> that was returned from <code>viewControllerForLocation</code> method, it will call and pass that <code>UIViewController</code> as <code>viewControllerToCommit</code> to second\n<code>previewingContext(_ previewingContext: UIViewControllerPreviewing, commit viewControllerToCommit: UIViewController)</code> function.</p>\n<blockquote>\n<p>Important thing is that when the <code>viewControllerForLocation</code> returns <code>nil</code> the second function <code>viewControllerToCommit</code> will be not called.</p>\n</blockquote>\n<p>In this method we can present <code>viewControllerToCommit</code> or do another actions e.g animate touched view.</p>\n<h2>Implementation</h2>\n<p>Let's imagine that you have <code>UIViewController</code> that contains two <code>UIImageViews</code> with beautiful apple images inside.\nFor this controller we want to implement 3d Touch Peak&#x26;Pop feature.</p>\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/kamwysoc/kamwysoc.github.io/master/assets/posts/3dTouch/view_controller.png\"/>\n</p>\n<p>In <code>viewDidLoad()</code> function, register our controller for force touch events.</p>\n<script src=\"https://gist.github.com/kamwysoc/ab027712bcc2355293a589326d53dcbf.js\"></script>\n<p>Create and add the <code>UIImageViews</code> to the array named <code>forceTouchableViews</code>. In my implementation I created <code>AppleImageView</code> class that inherits from <code>UIImageView</code> and have a <code>appleDescription</code> property.</p>\n<script src=\"https://gist.github.com/kamwysoc/fee49ab346af7b034d944ee4a1185034.js\"></script>\n<p>You might be wondering why the <code>forceTouchableViews</code> is needed. But keep calm and continue reading, I will get back to it later :-).</p>\n<p>Now let's create an extension for our <code>UIViewController</code> that will conform to <code>UIViewControllerPreviewingDelegate</code></p>\n<script src=\"https://gist.github.com/kamwysoc/9d61c4893dad27b18276311ccb3b0cb1.js\"></script>\n<blockquote>\n<p>For my purposes I created an Apple model class that holds name and image property. Also I created AppleDescriptionViewController which will be responsible for representing the <code>viewControllerToCommit</code> parameter.</p>\n</blockquote>\n<h2>About the code</h2>\n<p>As you can see in <code>viewControllerForLocation</code> method, I iterate through my <code>forceTouchableViews</code> and check using <code>wasTouched(in: location)</code> function, if some of views was touched. If no view was touched the function will return nil.\nOk, but what that <code>wasTouched(in: location)</code> function does?</p>\n<script src=\"https://gist.github.com/kamwysoc/c63284cf2b098fd0906c24583a718040.js\"></script>\n<p>It converts input point to location in superview(if exist) and then checks if that location is inside UIView's bounds. If yes then it will return <code>true</code> and we can say that our view was touched.</p>\n<p>If I determine that some of my apple image views was touched, then I create a <code>AppleDescriptionViewController</code> and return it.</p>\n<p>The only thing just left is to press a little bit harder on our apple image view and we will get into last step. The body of that function is simple as follow:</p>\n<script src=\"https://gist.github.com/kamwysoc/765e20cc3d9734e2edab387ea7b5d1a9.js\"></script>\n<h2>Result</h2>\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/kamwysoc/kamwysoc.github.io/master/assets/posts/3dTouch/result.gif\"/>\n</p>\n<p>pretty nice, huh?</p>\n<h2>Conclusion</h2>\n<p>I don't like the way to determine what view user touched. Checking a point and calculating location for that is not really nice. Maybe another, better way to implementing 3d touch mechanism for views could be: extending a <code>UIView</code> class by some property like <code>3dTouchGestureRecognizerDelegate</code> then implementing some methods like in <code>UIViewControllerPreviewingDelegate</code>. Then we don't have to check whether view was touched, because on the delegate methods the touched view could be passed as method parameter. Something familiar to <code>gestureRecognizer</code>. Maybe in future iOS updates the API will be changed?\nTo sum up, <code>UIViewControllerPreviewing</code> allows us the create pretty nice features and I highly recommend to use that and make your application better!</p>\n<p>The whole implementation with example app you can find in my <a href=\"https://github.com/kamwysoc/3dTouchPeak-Pop\">GitHub repository</a> .</p>\n<p>Thanks for reading, and see you soon!</p>\n<p>*This blog is cross posted with my <a href=\"https://wysockikamil.com/3dtouch-peak-and-pop/\">personal blog</a> *</p>","excerpt":"In my previous post I wrote about adopting UIApplicationShortcutItems in your app. Now it's time to implement Peak&Pop - a feature provided…","frontmatter":{"slug":null,"title":"3D Touch - Peak&amp;Pop feature.","description":null,"author":"kwysocki","tags":["iOS","swift","3d touch"],"date":"2016-12-10T23:00:00.000Z","image":null},"timeToRead":4,"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2016-12-11-3dtouch-peak-and-pop.md"},"allMarkdownRemark":{"nodes":[{"frontmatter":{"author_id":"adam","avatar":"/images/members/adam_bar.jpg","bio":"The Web Guy @ Bright Inventions","name":"Adam Bar","web":"https://whatwebcando.today"}},{"frontmatter":{"author_id":"agnieszka_h","avatar":"/images/members/agnieszka_h.jpg","bio":"Sales Manager @ Bright Inventions","name":"Agnieszka Hayashida","web":null}},{"frontmatter":{"author_id":"agnieszka","avatar":"/images/members/agnieszka_olszewska.jpg","bio":"Fullstack developer","name":"Agnieszka Olszewska","web":null}},{"frontmatter":{"author_id":"olo","avatar":"/images/members/aleksander_wielgorski.jpeg","bio":"Software Engineer @ Bright Inventions","name":"Aleksander Wielgórski","web":null}},{"frontmatter":{"author_id":"alisa","avatar":"/images/members/alisa_kashytska.jpg","bio":"Product designer","name":"Alisa Kashytska","web":null}},{"frontmatter":{"author_id":"azabost","avatar":"/images/members/andrzej_zabost.jpg","bio":"Senior Android developer","name":"Andrzej Zabost","web":"https://azabost.com"}},{"frontmatter":{"author_id":"arturs","avatar":"/images/members/artur.jpg","bio":"iOS developer","name":"Artur Suliński","web":null}},{"frontmatter":{"author_id":"bartek k","avatar":"/images/members/bartek_krzyzanski.jpg","bio":"Backend developer","name":"Bartek Krzyżański","web":null}},{"frontmatter":{"author_id":"bartekr","avatar":"/images/members/bartek.jpg","bio":"iOS developer","name":"Bartek Rozwarski","web":null}},{"frontmatter":{"author_id":"bartosz","avatar":"/images/members/bartosz_szafran.jpg","bio":"Senior Frontend Developer","name":"Bartosz Szafran","web":null}},{"frontmatter":{"author_id":"daniel","avatar":"/images/members/daniel_makurat.jpg","bio":"Co-founder & Senior Backend developer","name":"Daniel Makurat","web":null}},{"frontmatter":{"author_id":"eliasz","avatar":"/images/members/eliasz.png","bio":"Software Engineer @ Bright Inventions","name":"Eliasz Sawicki","web":"http://eluss.github.io/"}},{"frontmatter":{"author_id":"fjablonski","avatar":"/images/members/filip_jablonski.jpg","bio":"Senior iOS developer","name":"Filip Jabłoński","web":null}},{"frontmatter":{"author_id":"grzesiek","avatar":"/images/members/grzegorz_ciesla.jpg","bio":"Software Developer","name":"Grzegorz Cieśla","web":null}},{"frontmatter":{"author_id":"ivan","avatar":"/images/members/ivan.jpg","bio":"Fullstack developer","name":"Ivan Menshykov","web":null}},{"frontmatter":{"author_id":"janek","avatar":"/images/members/janhanc.jpg","bio":"Frontend developer","name":"Jan Hanc","web":null}},{"frontmatter":{"author_id":"kwysocki","avatar":"/images/members/kamil.png","bio":"Software Engineer @ Bright Inventions","name":"Kamil Wysocki","web":"https://wysockikamil.com"}},{"frontmatter":{"author_id":"karoln","avatar":"/images/members/karol_nadratowski.jpg","bio":null,"name":"Karol Nadratowski","web":null}},{"frontmatter":{"author_id":"karol r","avatar":"/images/members/karol_rinc.jpg","bio":"Backend developer","name":"Karol Rinc","web":null}},{"frontmatter":{"author_id":"kasia","avatar":"/images/members/kasia_lukasiewicz.jpg","bio":"Senior Project Manager","name":"Kasia Łukasiewicz","web":null}},{"frontmatter":{"author_id":"kasia g","avatar":"/images/members/katarzyna_galka.jpg","bio":"Project manager","name":"Katarzyna Gałka","web":null}},{"frontmatter":{"author_id":"krzysiek h","avatar":"/images/members/krzysztof_hinc.jpg","bio":"Web developer","name":"Krzysiek Hinc","web":null}},{"frontmatter":{"author_id":"krzysiek","avatar":"/images/members/krzysztof_kaczmarek.jpg","bio":"Senior iOS Developer","name":"Krzysztof Kaczmarek","web":null}},{"frontmatter":{"author_id":"maciej","avatar":"/images/members/maciej_seleman.jpg","bio":"QA Specialist","name":"Maciej Seleman","web":null}},{"frontmatter":{"author_id":"magda","avatar":"/images/members/magda_sadowska.jpg","bio":"Office & HR Assistant","name":"Magda Sadowska","web":null}},{"frontmatter":{"author_id":"maja","avatar":"/images/members/maja_puta.jpg","bio":"Junior QA Specialist","name":"Maja Puta","web":null}},{"frontmatter":{"author_id":"marcink","avatar":"/images/members/marcin_kwiatkowski.jpg","bio":null,"name":"Marcin Kwiatkowski","web":null}},{"frontmatter":{"author_id":"mateusz","avatar":"/images/members/mateusz_klimczak.jpg","bio":"Technical leader & Project manager","name":"Mateusz Klimczak","web":null}},{"frontmatter":{"author_id":"mateuszklimek","avatar":"/images/members/mateuszklimek.png","bio":"Software Engineer @ Bright Inventions","name":"Mateusz Klimek","web":null}},{"frontmatter":{"author_id":"michal k","avatar":"/images/members/michal_koszalka.jpg","bio":"Senior Backend developer","name":"Michał Koszałka","web":null}},{"frontmatter":{"author_id":"michał","avatar":"/images/members/michal_wrobel.jpg","bio":"Senior Backend Developer at Bright Inventions","name":"Michał Wróbel","web":null}},{"frontmatter":{"author_id":"michal","avatar":"/images/members/michał_łukasiewicz.jpg","bio":"Co-founder & Senior iOS developer","name":"Michał Łukasiewicz","web":null}},{"frontmatter":{"author_id":"monika","avatar":"/images/members/monika.jpg","bio":"Software Developer @ Bright Inventions","name":"Monika Niegrzybowska","web":null}},{"frontmatter":{"author_id":"nikodem","avatar":"/images/members/nikodem_kalinowski.jpg","bio":"Web developer","name":"Nikodem Kalinowski","web":null}},{"frontmatter":{"author_id":"patryk","avatar":"/images/members/patryk_huzarski.jpg","bio":"Software Developer @ Bright Inventions","name":"Patryk Huzarski","web":null}},{"frontmatter":{"author_id":"patryk sz","avatar":"/images/members/patryk_szlagowski.jpg","bio":"Senior Backend developer","name":"Patryk Szlagowski","web":null}},{"frontmatter":{"author_id":"paweł","avatar":"/images/members/paweł_gutkowski.jpg","bio":"Fullstack Developer at Bright Inventions ","name":"Paweł Gutkowski","web":null}},{"frontmatter":{"author_id":"pawel","avatar":"/images/members/paweł_papkiewicz.jpg","bio":"Fullstack developer","name":"Paweł Papkiewicz","web":null}},{"frontmatter":{"author_id":"piotr","avatar":"/images/members/piotr_mionskowski.jpg","bio":"TDD fan eager to learn new things","name":"Piotr Mionskowski","web":"https://miensol.pl"}},{"frontmatter":{"author_id":"piotr_l","avatar":"/images/members/piotrl.png","bio":"Android Developer @ Bright Inventions","name":"Piotr Łupiński","web":"http://exp.flamaster2.com"}},{"frontmatter":{"author_id":"radek","avatar":"/images/members/radek_pieczątkiewicz.jpg","bio":"Android developer","name":"Radek Pieczątkiewicz","web":null}},{"frontmatter":{"author_id":"radeks","avatar":"/images/members/radoslaw.jpg","bio":"Software Engineer @ Bright Inventions","name":"Radosław Słowiński","web":null}},{"frontmatter":{"author_id":"rafal h","avatar":"/images/members/rafal_hoffman.jpg","bio":"Fullstack developer","name":"Rafał Hofman","web":null}},{"frontmatter":{"author_id":"sebastian","avatar":"/images/members/sebastian_sobczak.jpg","bio":"Junior Account Manager at Bright Inventions ","name":"Sebastian Sobczak","web":null}},{"frontmatter":{"author_id":"szymek","avatar":"/images/members/szymon_miloch.jpg","bio":"Android & Web developer","name":"Szymon Miloch","web":null}},{"frontmatter":{"author_id":"tomek","avatar":"/images/members/tomek.jpeg","bio":null,"name":"Tomasz Gęsior","web":null}},{"frontmatter":{"author_id":"ula","avatar":"/images/members/ula_stankiewicz.jpg","bio":"HR & Marketing Manager","name":"Ula Stankiewicz","web":null}},{"frontmatter":{"author_id":"wojciech","avatar":"/images/members/wojciech_baczyński.jpg","bio":"Fullstack developer","name":"Wojciech Baczyński","web":null}},{"frontmatter":{"author_id":"lukasz","avatar":"/images/members/lukasz_reszetow.jpg","bio":"Android developer","name":"Łukasz Reszetow","web":null}}]},"site":{"siteMetadata":{"siteUrl":"https://brightinventions.pl"}}},"pageContext":{"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2016-12-11-3dtouch-peak-and-pop.md"}}}
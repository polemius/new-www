{"componentChunkName":"component---src-templates-post-template-tsx","path":"/blog/purelayout-vs-snapkit","result":{"data":{"markdownRemark":{"html":"<p>At first, let me clear something out. I'm heavy PureLayout user. I've been creating my UIs in code for some time now and it's not looking like I'm going back to Interface Builder any time soon. I'm not saying IB is bad, but it's just not the way that I do things. I started working with PureLayout back in Objective-C days and I kept on using it in Swift as well. However, recently I've been interested in a framework called SnapKit, that offers a nice \"swifty\" way of building views in your application. This post is my way of getting into SnapKit. Below, you can find some UI examples, that I've written using both PureLayout and SnapKit.</p>\n<h2>Simple positioning</h2>\n<p><img src=\"/images/simple-positioning.png\" alt=\"Simple positioning\"></p>\n<pre><code class=\"language-swift\">func pureLayout() {\n    box.autoPinEdge(toSuperviewEdge: .top, withInset: 50)\n    box.autoPinEdge(toSuperviewEdge: .left, withInset: 20)\n    box.autoSetDimensions(to: CGSize(width: 100, height: 100))\n\n    circle.autoPinEdge(.top, to: .top, of: box)\n    circle.autoPinEdge(toSuperviewEdge: .right, withInset: 20)\n    circle.autoSetDimensions(to: CGSize(width: 100, height: 100))\n\n    longer.autoPinEdge(toSuperviewEdge: .left, withInset: 20)\n    longer.autoPinEdge(toSuperviewEdge: .right, withInset: 20)\n    longer.autoPinEdge(.top, to: .bottom, of: box, withOffset: 40)\n    longer.autoSetDimension(.height, toSize: 40)\n}\n\nfunc snapKit() {\n    box.snp.makeConstraints { (make) in\n        make.top.equalTo(self.view).inset(50)\n        make.left.equalTo(self.view).inset(20)\n        make.size.equalTo(CGSize(width: 100, height: 100))\n    }\n\n    circle.snp.makeConstraints { (make) in\n        make.top.equalTo(self.box)\n        make.right.equalTo(self.view).inset(20)\n        make.size.equalTo(CGSize(width: 100, height: 100))\n    }\n\n    longer.snp.makeConstraints { (make) in\n        make.left.right.equalTo(self.view).inset(20)\n        make.top.equalTo(self.box.snp.bottom).offset(40)\n        make.height.equalTo(40)\n    }\n}\n</code></pre>\n<h2>Inside UIScrollView</h2>\n<p><img src=\"/images/Scroll.gif\" alt=\"ScrollView positioning\"></p>\n<pre><code class=\"language-swift\">func pureLayout() {\n    scrollView.autoPinEdgesToSuperviewEdges(with: .zero)\n    scrollView.autoPinEdge(.bottom, to: .bottom, of: longer, withOffset: 20)\n\n    box.autoPinEdge(toSuperviewEdge: .top, withInset: 50)\n    box.autoPinEdge(.left, to: .left, of: self.view, withOffset: 20)\n    box.autoSetDimensions(to: CGSize(width: 100, height: 100))\n\n    circle.autoPinEdge(.top, to: .top, of: box)\n    circle.autoPinEdge(.right, to: .right, of: self.view, withOffset: -20)\n    circle.autoSetDimensions(to: CGSize(width: 100, height: 100))\n\n    longer.autoPinEdge(.left, to: .left, of: self.view, withOffset: 20)\n    longer.autoPinEdge(.right, to: .right, of: self.view, withOffset: -20)\n    longer.autoPinEdge(.top, to: .bottom, of: box, withOffset: 300)\n    longer.autoSetDimension(.height, toSize: 200)\n}\n\nfunc snapKit() {\n    scrollView.snp.makeConstraints { (make) in\n        make.edges.equalTo(self.view)\n        make.bottom.equalTo(longer).offset(20)\n    }\n\n    box.snp.makeConstraints { (make) in\n        make.top.equalTo(self.scrollView).inset(50)\n        make.left.equalTo(self.view).inset(20)\n        make.size.equalTo(CGSize(width: 100, height: 100))\n    }\n\n    circle.snp.makeConstraints { (make) in\n        make.top.equalTo(self.box)\n        make.right.equalTo(self.view).inset(20)\n        make.size.equalTo(CGSize(width: 100, height: 100))\n    }\n\n    longer.snp.makeConstraints { (make) in\n        make.left.right.equalTo(self.view).inset(20)\n        make.top.equalTo(self.box.snp.bottom).offset(300)\n        make.height.equalTo(200)\n    }\n}\n</code></pre>\n<h2>UIScrollView with a surprise</h2>\n<p><img src=\"/images/ScrollViewSurprise.gif\" alt=\"ScrollView positioning\"></p>\n<pre><code class=\"language-swift\">func pureLayout() {\n    scrollView.autoPinEdgesToSuperviewEdges(with: .zero)\n    scrollView.autoPinEdge(.bottom, to: .bottom, of: longer, withOffset: 20)\n\n    box.autoPinEdge(toSuperviewEdge: .top, withInset: 150)\n    box.autoAlignAxis(toSuperviewAxis: .vertical)\n    box.autoSetDimensions(to: CGSize(width: 100, height: 100))\n\n    circle.autoPinEdge(.bottom, to: .bottom, of: self.view, withOffset: -20, relation: .lessThanOrEqual)\n    circle.autoPinEdge(.bottom, to: .top, of: longer, withOffset: -20, relation: .lessThanOrEqual)\n    circle.autoAlignAxis(toSuperviewAxis: .vertical)\n    circle.autoSetDimensions(to: CGSize(width: 100, height: 100))\n\n    longer.autoPinEdge(.left, to: .left, of: self.view, withOffset: 20)\n    longer.autoPinEdge(.right, to: .right, of: self.view, withOffset: -20)\n    longer.autoPinEdge(.top, to: .bottom, of: box, withOffset: 660)\n    longer.autoSetDimension(.height, toSize: 200)\n}\n\nfunc snapKit() {\n    scrollView.snp.makeConstraints { (make) in\n        make.edges.equalTo(self.view)\n        make.bottom.equalTo(longer).offset(20)\n    }\n\n    box.snp.makeConstraints { (make) in\n        make.top.equalTo(self.scrollView).offset(150)\n        make.centerX.equalTo(self.view)\n        make.size.equalTo(CGSize(width: 100, height: 100))\n    }\n\n    circle.snp.makeConstraints { (make) in\n        make.bottom.lessThanOrEqualTo(self.view).offset(-20)\n        make.bottom.lessThanOrEqualTo(self.longer.snp.top).offset(-20)\n        make.centerX.equalTo(self.view)\n        make.size.equalTo(CGSize(width: 100, height: 100))\n    }\n\n    longer.snp.makeConstraints { (make) in\n        make.left.right.equalTo(self.view).inset(20)\n        make.top.equalTo(self.box.snp.bottom).offset(660)\n        make.height.equalTo(200)\n    }\n}\n</code></pre>\n<h2>Updating constraint's constant</h2>\n<p><img src=\"/images/move.gif\" alt=\"ScrollView positioning\"></p>\n<pre><code class=\"language-swift\">var buttonLeftConstraint: NSLayoutConstraint?\n\nfunc pureLayout() {\n    buttonLeftConstraint = animateButton.autoPinEdge(toSuperviewEdge: .left, withInset: 20)\n    animateButton.autoPinEdge(toSuperviewEdge: .top, withInset: 50)\n    animateButton.autoSetDimensions(to: CGSize(width: 100, height: 100))\n}\n\nfunc animate() {\n    UIView.animate(withDuration: 1) {\n        let random: Double = Double(arc4random_uniform(200))\n        self.buttonLeftConstraint?.constant = random\n        self.view.layoutIfNeeded()\n    }\n}\n\n///\n\nvar buttonLeftConstraint: Constraint?\n\nfunc snapKit() {\n    animateButton.snp.makeConstraints { (make) in\n        buttonLeftConstraint = make.left.equalTo(self.view).offset(20).constraint\n        make.top.equalTo(self.view).inset(50)\n        make.size.equalTo(CGSize(width: 100, height: 100))\n    }\n}\n\nfunc animate() {\n    UIView.animate(withDuration: 1) {\n        let random: Double = Double(arc4random_uniform(200))\n        self.buttonLeftConstraint?.update(offset: random)\n        self.view.layoutIfNeeded()\n    }\n}\n</code></pre>\n<h2>Conclusion</h2>\n<p>Looking at those examples, you can decide which style of UI you prefer. Personally, I must admit that I really like the way that SnapKit works. I won't be rewriting my existing PureLayout to SnapKit codebase, but I'll surely take SnapKit into consideration, when starting a new project.</p>\n<p><em>This article is cross-posted with my <a href=\"https://eliaszsawicki.com/\">my personal blog</a>.</em></p>","excerpt":"At first, let me clear something out. I'm heavy PureLayout user. I've been creating my UIs in code for some time now and it's not looking…","frontmatter":{"slug":null,"title":"PureLayout vs SnapKit - Great confrontation","description":null,"author":"eliasz","tags":["iOS"],"date":"2016-10-30T23:00:00.000Z","image":null},"timeToRead":4,"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2016-10-31-purelayout-vs-snapkit.md"},"allMarkdownRemark":{"nodes":[{"frontmatter":{"author_id":"adam","avatar":"/images/members/adam_bar.jpg","bio":"The Web Guy @ Bright Inventions","name":"Adam Bar","web":"https://whatwebcando.today"}},{"frontmatter":{"author_id":"agnieszka_h","avatar":"/images/members/agnieszka_h.jpg","bio":"Sales Manager @ Bright Inventions","name":"Agnieszka Hayashida","web":null}},{"frontmatter":{"author_id":"agnieszka","avatar":"/images/members/agnieszka_olszewska.jpg","bio":"Fullstack developer","name":"Agnieszka Olszewska","web":null}},{"frontmatter":{"author_id":"olo","avatar":"/images/members/aleksander_wielgorski.jpeg","bio":"Software Engineer @ Bright Inventions","name":"Aleksander Wielgórski","web":null}},{"frontmatter":{"author_id":"alisa","avatar":"/images/members/alisa_kashytska.jpg","bio":"Product designer","name":"Alisa Kashytska","web":null}},{"frontmatter":{"author_id":"azabost","avatar":"/images/members/andrzej_zabost.jpg","bio":"Senior Android developer","name":"Andrzej Zabost","web":"https://azabost.com"}},{"frontmatter":{"author_id":"arturs","avatar":"/images/members/artur.jpg","bio":"iOS developer","name":"Artur Suliński","web":null}},{"frontmatter":{"author_id":"bartek k","avatar":"/images/members/bartek_krzyzanski.jpg","bio":"Backend developer","name":"Bartek Krzyżański","web":null}},{"frontmatter":{"author_id":"bartekr","avatar":"/images/members/bartek.jpg","bio":"iOS developer","name":"Bartek Rozwarski","web":null}},{"frontmatter":{"author_id":"bartosz","avatar":"/images/members/bartosz_szafran.jpg","bio":"Senior Frontend Developer","name":"Bartosz Szafran","web":null}},{"frontmatter":{"author_id":"daniel","avatar":"/images/members/daniel_makurat.jpg","bio":"Co-founder & Senior Backend developer","name":"Daniel Makurat","web":null}},{"frontmatter":{"author_id":"eliasz","avatar":"/images/members/eliasz.png","bio":"Software Engineer @ Bright Inventions","name":"Eliasz Sawicki","web":"http://eluss.github.io/"}},{"frontmatter":{"author_id":"fjablonski","avatar":"/images/members/filip_jablonski.jpg","bio":"Senior iOS developer","name":"Filip Jabłoński","web":null}},{"frontmatter":{"author_id":"grzesiek","avatar":"/images/members/grzegorz_ciesla.jpg","bio":"Software Developer","name":"Grzegorz Cieśla","web":null}},{"frontmatter":{"author_id":"ivan","avatar":"/images/members/ivan.jpg","bio":"Fullstack developer","name":"Ivan Menshykov","web":null}},{"frontmatter":{"author_id":"janek","avatar":"/images/members/janhanc.jpg","bio":"Frontend developer","name":"Jan Hanc","web":null}},{"frontmatter":{"author_id":"kwysocki","avatar":"/images/members/kamil.png","bio":"Software Engineer @ Bright Inventions","name":"Kamil Wysocki","web":"https://wysockikamil.com"}},{"frontmatter":{"author_id":"karoln","avatar":"/images/members/karol_nadratowski.jpg","bio":null,"name":"Karol Nadratowski","web":null}},{"frontmatter":{"author_id":"karol r","avatar":"/images/members/karol_rinc.jpg","bio":"Backend developer","name":"Karol Rinc","web":null}},{"frontmatter":{"author_id":"kasia","avatar":"/images/members/kasia_lukasiewicz.jpg","bio":"Senior Project Manager","name":"Kasia Łukasiewicz","web":null}},{"frontmatter":{"author_id":"kasia g","avatar":"/images/members/katarzyna_galka.jpg","bio":"Project manager","name":"Katarzyna Gałka","web":null}},{"frontmatter":{"author_id":"krzysiek h","avatar":"/images/members/krzysztof_hinc.jpg","bio":"Web developer","name":"Krzysiek Hinc","web":null}},{"frontmatter":{"author_id":"krzysiek","avatar":"/images/members/krzysztof_kaczmarek.jpg","bio":"Senior iOS Developer","name":"Krzysztof Kaczmarek","web":null}},{"frontmatter":{"author_id":"maciej","avatar":"/images/members/maciej_seleman.jpg","bio":"QA Specialist","name":"Maciej Seleman","web":null}},{"frontmatter":{"author_id":"magda","avatar":"/images/members/magda_sadowska.jpg","bio":"Office & HR Assistant","name":"Magda Sadowska","web":null}},{"frontmatter":{"author_id":"maja","avatar":"/images/members/maja_puta.jpg","bio":"Junior QA Specialist","name":"Maja Puta","web":null}},{"frontmatter":{"author_id":"marcink","avatar":"/images/members/marcin_kwiatkowski.jpg","bio":null,"name":"Marcin Kwiatkowski","web":null}},{"frontmatter":{"author_id":"mateusz","avatar":"/images/members/mateusz_klimczak.jpg","bio":"Technical leader & Project manager","name":"Mateusz Klimczak","web":null}},{"frontmatter":{"author_id":"mateuszklimek","avatar":"/images/members/mateuszklimek.png","bio":"Software Engineer @ Bright Inventions","name":"Mateusz Klimek","web":null}},{"frontmatter":{"author_id":"michal k","avatar":"/images/members/michal_koszalka.jpg","bio":"Senior Backend developer","name":"Michał Koszałka","web":null}},{"frontmatter":{"author_id":"michał","avatar":"/images/members/michal_wrobel.jpg","bio":"Senior Backend Developer at Bright Inventions","name":"Michał Wróbel","web":null}},{"frontmatter":{"author_id":"michal","avatar":"/images/members/michał_łukasiewicz.jpg","bio":"Co-founder & Senior iOS developer","name":"Michał Łukasiewicz","web":null}},{"frontmatter":{"author_id":"monika","avatar":"/images/members/monika.jpg","bio":"Software Developer @ Bright Inventions","name":"Monika Niegrzybowska","web":null}},{"frontmatter":{"author_id":"nikodem","avatar":"/images/members/nikodem_kalinowski.jpg","bio":"Web developer","name":"Nikodem Kalinowski","web":null}},{"frontmatter":{"author_id":"patryk","avatar":"/images/members/patryk_huzarski.jpg","bio":"Software Developer @ Bright Inventions","name":"Patryk Huzarski","web":null}},{"frontmatter":{"author_id":"patryk sz","avatar":"/images/members/patryk_szlagowski.jpg","bio":"Senior Backend developer","name":"Patryk Szlagowski","web":null}},{"frontmatter":{"author_id":"paweł","avatar":"/images/members/paweł_gutkowski.jpg","bio":"Fullstack Developer at Bright Inventions ","name":"Paweł Gutkowski","web":null}},{"frontmatter":{"author_id":"pawel","avatar":"/images/members/paweł_papkiewicz.jpg","bio":"Fullstack developer","name":"Paweł Papkiewicz","web":null}},{"frontmatter":{"author_id":"piotr","avatar":"/images/members/piotr_mionskowski.jpg","bio":"TDD fan eager to learn new things","name":"Piotr Mionskowski","web":"https://miensol.pl"}},{"frontmatter":{"author_id":"piotr_l","avatar":"/images/members/piotrl.png","bio":"Android Developer @ Bright Inventions","name":"Piotr Łupiński","web":"http://exp.flamaster2.com"}},{"frontmatter":{"author_id":"radek","avatar":"/images/members/radek_pieczątkiewicz.jpg","bio":"Android developer","name":"Radek Pieczątkiewicz","web":null}},{"frontmatter":{"author_id":"radeks","avatar":"/images/members/radoslaw.jpg","bio":"Software Engineer @ Bright Inventions","name":"Radosław Słowiński","web":null}},{"frontmatter":{"author_id":"rafal h","avatar":"/images/members/rafal_hoffman.jpg","bio":"Fullstack developer","name":"Rafał Hofman","web":null}},{"frontmatter":{"author_id":"sebastian","avatar":"/images/members/sebastian_sobczak.jpg","bio":"Junior Account Manager at Bright Inventions ","name":"Sebastian Sobczak","web":null}},{"frontmatter":{"author_id":"szymek","avatar":"/images/members/szymon_miloch.jpg","bio":"Android & Web developer","name":"Szymon Miloch","web":null}},{"frontmatter":{"author_id":"tomek","avatar":"/images/members/tomek.jpeg","bio":null,"name":"Tomasz Gęsior","web":null}},{"frontmatter":{"author_id":"ula","avatar":"/images/members/ula_stankiewicz.jpg","bio":"HR & Marketing Manager","name":"Ula Stankiewicz","web":null}},{"frontmatter":{"author_id":"wojciech","avatar":"/images/members/wojciech_baczyński.jpg","bio":"Fullstack developer","name":"Wojciech Baczyński","web":null}},{"frontmatter":{"author_id":"lukasz","avatar":"/images/members/lukasz_reszetow.jpg","bio":"Android developer","name":"Łukasz Reszetow","web":null}}]},"site":{"siteMetadata":{"siteUrl":"https://brightinventions.pl"}}},"pageContext":{"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2016-10-31-purelayout-vs-snapkit.md"}}}
{"componentChunkName":"component---src-templates-post-template-tsx","path":"/blog/request-typing","result":{"data":{"markdownRemark":{"html":"<h3>Introduction</h3>\n<p>As a developers we often perform POST and PATCH requests to API from our frontend apps. When we use\nTypeScript, this code should be typed safely. There are multiple ways to do so. Let's analyze one of them!</p>\n<h3>Prerequisite</h3>\n<p>Let's imagine a player entity from a game:</p>\n<pre><code class=\"language-typescript\">// Create a type for our object\ntype PlayerType = {\n  hp: number\n  name: string\n  position: [number, number]\n}\n\n// Alternatively we can use interface:\ninterface PlayerInterface {\n  hp: number\n  name: string\n  position: [number, number]\n}\n</code></pre>\n<p>Let's create two functions (without safe type control as for now) to create and update our player:</p>\n<pre><code class=\"language-typescript\">const postPlayer = (data: any) => {\n  // API call with POST method, here as data whole Player object should be sent. \n}\n\nconst patchPlayer = (data: any) => {\n  // API call with PATCH method, here as data Player object can be sent as a whole or partialy. \n}\n</code></pre>\n<h3>Safe typing</h3>\n<p>Leaving type <code>any</code> can lead application to behave erroneous moreover we do not benefit from TypeScript static type\nchecking. <strong>Avoid</strong> leaving <code>any</code> in code - there is probably a better solution!</p>\n<p>Statically typed functions arguments could look like this:</p>\n<pre><code class=\"language-typescript\">// Here we use PlayerType (or PlayerInterface) type as API require whole object \nconst postPlayer = (data: PlayerType | PlayerInterface) => { }\n\n// Example of \"keyof\" operator\ntype PlayerTypeKeys = keyof PlayerType // \"hp\" | \"name\" | \"position\"\n\n// Copy of PlayerType type with \"?\" beeing added - this will change object properties to be optional\ntype PlayerTypeOptional = {\n  [K in keyof PlayerType]?: PlayerType[K]\n}\n\n// Here we use PlayerOptional (or partial of PlayerInterface) type as API does not require whole object\nconst patchPlayer = (data: PlayerTypeOptional | Partial&#x3C;PlayerInterface>) => { }\n</code></pre>\n<p>Let's test our type for safety:</p>\n<pre><code class=\"language-typescript\">// Here we create objects which later will be send to API thre proper functions\nconst player1: PlayerType = { hp: 10, name: \"Albert\", position: [10, 1] }\nconst player2: PlayerInterface = { hp: 20, name: \"Antony\", position: [2, 20] }\nconst player3: PlayerTypeOptional = { name: \"Alex\" }\nconst player4: Partial&#x3C;PlayerInterface> = { hp: 2 }\n\n// Results\npostPlayer(player1)     // OK\npostPlayer(player2)     // OK\npostPlayer(player3)     // Error\npostPlayer(player4)     // Error\npatchPlayer(player1)    // OK \npatchPlayer(player2)    // OK \npatchPlayer(player3)    // OK \npatchPlayer(player4)    // OK\n</code></pre>\n<h3>Additional info</h3>\n<p>Similarly to adding optional (\"?\") modificator on <code>PlayerType</code> we can add by \"+\" (this sign can be omitted) or\nremove by \"-\" (this sign is required) readonly modificator:</p>\n<pre><code class=\"language-typescript\">type PlayerTypeReadonlyOne = {\n  readonly [K in keyof PlayerType]: PlayerType[K]\n}\n\ntype PlayerTypeReadonlyTwo = {\n  +readonly [K in keyof PlayerTypeOptional]-?: PlayerTypeOptional[K]\n}\n\ntype PlayerTypeOptionalTwo = {\n  -readonly [K in keyof PlayerTypeReadonlyOne]+?: PlayerTypeReadonlyOne[K]\n}\n\n// types PlayerTypeReadonlyOne and PlayerTypeReadonlyTwo are equivalent\nconst player5: PlayerTypeReadonlyOne = { hp: 1, name: \"One\", position: [1, 1] }\nconst player6: PlayerTypeReadonlyTwo = { hp: 2, name: \"Two\", position: [2, 2] }\n\n// types PlayerTypeOptional and PlayerTypeOptionalTwo are equivalent\nconst player7: PlayerTypeOptionalTwo = { position: [2, 2] }\n</code></pre>\n<p>As an alternative while using interface <code>SomeInterface</code> instead of type we can use a combination of\n<code>Readonly&#x3C;SomeInterface></code>, <code>Required&#x3C;SomeInterface></code>.</p>\n<h3>Conclusion</h3>\n<p>Proper API typing increase benefits from TypeScript static type checking and makes our development safer. Knowledge on\nhow to work with types or interfaces can help us find a way to do so in a DRY way!</p>","excerpt":"Introduction As a developers we often perform POST and PATCH requests to API from our frontend apps. When we use\nTypeScript, this code…","frontmatter":{"slug":null,"title":"Request typing","description":null,"author":"wojciech","tags":["typescript","types","API","frontend"],"date":"2021-01-06T12:12:12.000Z","image":"/images/request_typing.png"},"timeToRead":2,"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2021-01-06-request-typing.md"},"allMarkdownRemark":{"nodes":[{"frontmatter":{"author_id":"adam","avatar":"/images/members/adam_bar.jpg","bio":"The Web Guy @ Bright Inventions","name":"Adam Bar","web":"https://whatwebcando.today"}},{"frontmatter":{"author_id":"agnieszka_h","avatar":"/images/members/agnieszka_h.jpg","bio":"Sales Manager @ Bright Inventions","name":"Agnieszka Hayashida","web":null}},{"frontmatter":{"author_id":"agnieszka","avatar":"/images/members/agnieszka_olszewska.jpg","bio":"Fullstack developer","name":"Agnieszka Olszewska","web":null}},{"frontmatter":{"author_id":"olo","avatar":"/images/members/aleksander_wielgorski.jpeg","bio":"Software Engineer @ Bright Inventions","name":"Aleksander Wielgórski","web":null}},{"frontmatter":{"author_id":"alisa","avatar":"/images/members/alisa_kashytska.jpg","bio":"Product designer","name":"Alisa Kashytska","web":null}},{"frontmatter":{"author_id":"azabost","avatar":"/images/members/andrzej_zabost.jpg","bio":"Senior Android developer","name":"Andrzej Zabost","web":"https://azabost.com"}},{"frontmatter":{"author_id":"arturs","avatar":"/images/members/artur.jpg","bio":"iOS developer","name":"Artur Suliński","web":null}},{"frontmatter":{"author_id":"bartek k","avatar":"/images/members/bartek_krzyzanski.jpg","bio":"Backend developer","name":"Bartek Krzyżański","web":null}},{"frontmatter":{"author_id":"bartekr","avatar":"/images/members/bartek.jpg","bio":"iOS developer","name":"Bartek Rozwarski","web":null}},{"frontmatter":{"author_id":"bartosz","avatar":"/images/members/bartosz_szafran.jpg","bio":"Senior Frontend Developer","name":"Bartosz Szafran","web":null}},{"frontmatter":{"author_id":"daniel","avatar":"/images/members/daniel_makurat.jpg","bio":"Co-founder & Senior Backend developer","name":"Daniel Makurat","web":null}},{"frontmatter":{"author_id":"eliasz","avatar":"/images/members/eliasz.png","bio":"Software Engineer @ Bright Inventions","name":"Eliasz Sawicki","web":"http://eluss.github.io/"}},{"frontmatter":{"author_id":"fjablonski","avatar":"/images/members/filip_jablonski.jpg","bio":"Senior iOS developer","name":"Filip Jabłoński","web":null}},{"frontmatter":{"author_id":"grzesiek","avatar":"/images/members/grzegorz_ciesla.jpg","bio":"Software Developer","name":"Grzegorz Cieśla","web":null}},{"frontmatter":{"author_id":"ivan","avatar":"/images/members/ivan.jpg","bio":"Fullstack developer","name":"Ivan Menshykov","web":null}},{"frontmatter":{"author_id":"janek","avatar":"/images/members/janhanc.jpg","bio":"Frontend developer","name":"Jan Hanc","web":null}},{"frontmatter":{"author_id":"kwysocki","avatar":"/images/members/kamil.png","bio":"Software Engineer @ Bright Inventions","name":"Kamil Wysocki","web":"https://wysockikamil.com"}},{"frontmatter":{"author_id":"karoln","avatar":"/images/members/karol_nadratowski.jpg","bio":null,"name":"Karol Nadratowski","web":null}},{"frontmatter":{"author_id":"karol r","avatar":"/images/members/karol_rinc.jpg","bio":"Backend developer","name":"Karol Rinc","web":null}},{"frontmatter":{"author_id":"kasia","avatar":"/images/members/kasia_lukasiewicz.jpg","bio":"Senior Project Manager","name":"Kasia Łukasiewicz","web":null}},{"frontmatter":{"author_id":"kasia g","avatar":"/images/members/katarzyna_galka.jpg","bio":"Project manager","name":"Katarzyna Gałka","web":null}},{"frontmatter":{"author_id":"krzysiek h","avatar":"/images/members/krzysztof_hinc.jpg","bio":"Web developer","name":"Krzysiek Hinc","web":null}},{"frontmatter":{"author_id":"krzysiek","avatar":"/images/members/krzysztof_kaczmarek.jpg","bio":"Senior iOS Developer","name":"Krzysztof Kaczmarek","web":null}},{"frontmatter":{"author_id":"maciej","avatar":"/images/members/maciej_seleman.jpg","bio":"QA Specialist","name":"Maciej Seleman","web":null}},{"frontmatter":{"author_id":"magda","avatar":"/images/members/magda_sadowska.jpg","bio":"Office & HR Assistant","name":"Magda Sadowska","web":null}},{"frontmatter":{"author_id":"maja","avatar":"/images/members/maja_puta.jpg","bio":"Junior QA Specialist","name":"Maja Puta","web":null}},{"frontmatter":{"author_id":"marcink","avatar":"/images/members/marcin_kwiatkowski.jpg","bio":null,"name":"Marcin Kwiatkowski","web":null}},{"frontmatter":{"author_id":"mateusz","avatar":"/images/members/mateusz_klimczak.jpg","bio":"Technical leader & Project manager","name":"Mateusz Klimczak","web":null}},{"frontmatter":{"author_id":"mateuszklimek","avatar":"/images/members/mateuszklimek.png","bio":"Software Engineer @ Bright Inventions","name":"Mateusz Klimek","web":null}},{"frontmatter":{"author_id":"michal k","avatar":"/images/members/michal_koszalka.jpg","bio":"Senior Backend developer","name":"Michał Koszałka","web":null}},{"frontmatter":{"author_id":"michał","avatar":"/images/members/michal_wrobel.jpg","bio":"Senior Backend Developer at Bright Inventions","name":"Michał Wróbel","web":null}},{"frontmatter":{"author_id":"michal","avatar":"/images/members/michał_łukasiewicz.jpg","bio":"Co-founder & Senior iOS developer","name":"Michał Łukasiewicz","web":null}},{"frontmatter":{"author_id":"monika","avatar":"/images/members/monika.jpg","bio":"Software Developer @ Bright Inventions","name":"Monika Niegrzybowska","web":null}},{"frontmatter":{"author_id":"nikodem","avatar":"/images/members/nikodem_kalinowski.jpg","bio":"Web developer","name":"Nikodem Kalinowski","web":null}},{"frontmatter":{"author_id":"patryk","avatar":"/images/members/patryk_huzarski.jpg","bio":"Software Developer @ Bright Inventions","name":"Patryk Huzarski","web":null}},{"frontmatter":{"author_id":"patryk sz","avatar":"/images/members/patryk_szlagowski.jpg","bio":"Senior Backend developer","name":"Patryk Szlagowski","web":null}},{"frontmatter":{"author_id":"paweł","avatar":"/images/members/paweł_gutkowski.jpg","bio":"Fullstack Developer at Bright Inventions ","name":"Paweł Gutkowski","web":null}},{"frontmatter":{"author_id":"pawel","avatar":"/images/members/paweł_papkiewicz.jpg","bio":"Fullstack developer","name":"Paweł Papkiewicz","web":null}},{"frontmatter":{"author_id":"piotr","avatar":"/images/members/piotr_mionskowski.jpg","bio":"TDD fan eager to learn new things","name":"Piotr Mionskowski","web":"https://miensol.pl"}},{"frontmatter":{"author_id":"piotr_l","avatar":"/images/members/piotrl.png","bio":"Android Developer @ Bright Inventions","name":"Piotr Łupiński","web":"http://exp.flamaster2.com"}},{"frontmatter":{"author_id":"radek","avatar":"/images/members/radek_pieczątkiewicz.jpg","bio":"Android developer","name":"Radek Pieczątkiewicz","web":null}},{"frontmatter":{"author_id":"radeks","avatar":"/images/members/radoslaw.jpg","bio":"Software Engineer @ Bright Inventions","name":"Radosław Słowiński","web":null}},{"frontmatter":{"author_id":"rafal h","avatar":"/images/members/rafal_hoffman.jpg","bio":"Fullstack developer","name":"Rafał Hofman","web":null}},{"frontmatter":{"author_id":"sebastian","avatar":"/images/members/sebastian_sobczak.jpg","bio":"Junior Account Manager at Bright Inventions ","name":"Sebastian Sobczak","web":null}},{"frontmatter":{"author_id":"szymek","avatar":"/images/members/szymon_miloch.jpg","bio":"Android & Web developer","name":"Szymon Miloch","web":null}},{"frontmatter":{"author_id":"tomek","avatar":"/images/members/tomek.jpeg","bio":null,"name":"Tomasz Gęsior","web":null}},{"frontmatter":{"author_id":"ula","avatar":"/images/members/ula_stankiewicz.jpg","bio":"HR & Marketing Manager","name":"Ula Stankiewicz","web":null}},{"frontmatter":{"author_id":"wojciech","avatar":"/images/members/wojciech_baczyński.jpg","bio":"Fullstack developer","name":"Wojciech Baczyński","web":null}},{"frontmatter":{"author_id":"lukasz","avatar":"/images/members/lukasz_reszetow.jpg","bio":"Android developer","name":"Łukasz Reszetow","web":null}}]},"site":{"siteMetadata":{"siteUrl":"https://brightinventions.pl"}}},"pageContext":{"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2021-01-06-request-typing.md"}}}
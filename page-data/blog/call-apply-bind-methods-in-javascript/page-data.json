{"componentChunkName":"component---src-templates-post-template-tsx","path":"/blog/call-apply-bind-methods-in-javascript","result":{"data":{"markdownRemark":{"html":"<p>Working with JavaScript 'this' keyword can be tricky. Not knowing the background rules may end up with the famous “it doesn’t work and I don’t know why”. It’s good to know the theory before putting things into practice. <a href=\"https://developer.mozilla.org/pl/docs/Web/JavaScript/Reference/Global_Objects/Function/call\">'call()'</a>,  <a href=\"https://developer.mozilla.org/pl/docs/Web/JavaScript/Referencje/Obiekty/Function/apply\">'apply()'</a>  and <a href=\"https://developer.mozilla.org/pl/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\">'bind()'</a> methods can come in handy while setting the 'this' value.</p>\n<h2>Basic Rules Worth Remembering:</h2>\n<ol>\n<li>'this' always refers to an object.</li>\n<li>'this' refers to an object which calls the function it contains.</li>\n<li>In the global context 'this' refers to either window object or is undefined if the ‘strict mode’ is used.</li>\n</ol>\n<p>I would like to focus on the first two rules specifically.</p>\n<pre><code class=\"language-javascript\">var car = { \n    registrationNumber: \"GA12345\",\n    brand: \"Toyota\",\n\n    displayDetails: function(){\n        console.log(this.registrationNumber + \" \" + this.brand);\n    }\n}\n</code></pre>\n<p>The above will work perfectly fine as long as we use it this way:</p>\n<pre><code class=\"language-javascript\">car.displayDetails()\n</code></pre>\n<p>But what if we want to borrow a method?</p>\n<pre><code class=\"language-javascript\">var myCarDetails =  car.displayDetails;\nmyCarDetails()\n</code></pre>\n<p>Well, this won’t work as the 'this' will be now assigned to the global context which doesn’t have neither the 'registrationNumber' nor the 'brand' property. </p>\n<h2>The 'bind()' Method</h2>\n<p>For such cases we can use the ECMAScript 5 'bind()' method of the Function.prototype property. This means 'bind()' can be used by every single function. </p>\n<pre><code class=\"language-javascript\">var myCarDetails = car.displayDetails.bind(car)\nmyCarDetails()\n</code></pre>\n<p>The 'bind()' method creates a new function where 'this' refers to the parameter in the parenthesis in the above case “car”. This way the 'bind()' method enables us to call a function with a specified 'this' value.</p>\n<p>What if we would like to pass a parameter to the displayDetails function? We can use the bind method again. The following argument of the 'bind()' method will provide an argument to the function 'bind()' is called on. </p>\n<p>Let me rewrite the car object:</p>\n<pre><code class=\"language-javascript\">var car = { \n    registrationNumber: \"GA12345\",\n    brand: \"Toyota\",\n\n    displayDetails: function(ownerName){\n        console.log(ownerName + \", this is your car: \" + this.registrationNumber + \" \" + this.brand);\n    }\n}\n</code></pre>\n<p>Example of passing arguments with 'bind()':</p>\n<pre><code class=\"language-javascript\">var myCarDetails = car.displayDetails.bind(car, \"Vivian\")\n</code></pre>\n<h2>'call()' and 'apply()' Methods</h2>\n<p>Similar but slightly different usage provides the 'call()' and 'apply()' methods which also belong to the Function.prototype property. </p>\n<p>This time there is a 'car' object without the displayDetails function, which is located in the global context.</p>\n<pre><code class=\"language-javascript\">var car = { \n           registrationNumber: \"GA12345\",\n           brand: \"Toyota\"\n       }\n\nfunction displayDetails(ownerName){\n              console.log(ownerName + \", this is your car: \" + this.registrationNumber + \" \" + this.brand);\n</code></pre>\n<p>We can use the 'apply()' function:</p>\n<pre><code class=\"language-javascript\">displayDetails.apply(car, [\"Vivian\"])\n</code></pre>\n<p>Or</p>\n<pre><code class=\"language-javascript\">displayDetails.call(car, \"Vivian\")\n</code></pre>\n<p>Note that when using the 'apply()' function the parameter must be placed in an array. 'call()' accepts an argument list. Both are great tools for borrowing functions in JavaScript. </p>\n<p>'bind()', 'call()' and 'apply()' functions can make your life easier when you need to set the value of ‘this’.\nHope the post was helpful. Have a happy day and enjoy the coding!</p>","excerpt":"Working with JavaScript 'this' keyword can be tricky. Not knowing the background rules may end up with the famous “it doesn’t work and I don…","frontmatter":{"slug":null,"title":"call(), apply() and bind() Methods in JavaScript","description":null,"author":"monika","tags":["javascript","bind","apply","call"],"date":"2017-10-31T23:00:00.000Z","image":null},"timeToRead":2,"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2017-11-01-call-apply-bind-methods-in-javascript.md"},"allMarkdownRemark":{"nodes":[{"frontmatter":{"author_id":"adam","avatar":"/images/members/adam_bar.jpg","bio":"The Web Guy @ Bright Inventions","name":"Adam Bar","web":"https://whatwebcando.today"}},{"frontmatter":{"author_id":"agnieszka_h","avatar":"/images/members/agnieszka_h.jpg","bio":"Sales Manager @ Bright Inventions","name":"Agnieszka Hayashida","web":null}},{"frontmatter":{"author_id":"agnieszka","avatar":"/images/members/agnieszka_olszewska.jpg","bio":"Fullstack developer","name":"Agnieszka Olszewska","web":null}},{"frontmatter":{"author_id":"olo","avatar":"/images/members/aleksander_wielgorski.jpeg","bio":"Software Engineer @ Bright Inventions","name":"Aleksander Wielgórski","web":null}},{"frontmatter":{"author_id":"alisa","avatar":"/images/members/alisa_kashytska.jpg","bio":"Product designer","name":"Alisa Kashytska","web":null}},{"frontmatter":{"author_id":"azabost","avatar":"/images/members/andrzej_zabost.jpg","bio":"Senior Android developer","name":"Andrzej Zabost","web":"https://azabost.com"}},{"frontmatter":{"author_id":"arturs","avatar":"/images/members/artur.jpg","bio":"iOS developer","name":"Artur Suliński","web":null}},{"frontmatter":{"author_id":"bartek k","avatar":"/images/members/bartek_krzyzanski.jpg","bio":"Backend developer","name":"Bartek Krzyżański","web":null}},{"frontmatter":{"author_id":"bartekr","avatar":"/images/members/bartek.jpg","bio":"iOS developer","name":"Bartek Rozwarski","web":null}},{"frontmatter":{"author_id":"bartosz","avatar":"/images/members/bartosz_szafran.jpg","bio":"Senior Frontend Developer","name":"Bartosz Szafran","web":null}},{"frontmatter":{"author_id":"daniel","avatar":"/images/members/daniel_makurat.jpg","bio":"Co-founder & Senior Backend developer","name":"Daniel Makurat","web":null}},{"frontmatter":{"author_id":"eliasz","avatar":"/images/members/eliasz.png","bio":"Software Engineer @ Bright Inventions","name":"Eliasz Sawicki","web":"http://eluss.github.io/"}},{"frontmatter":{"author_id":"fjablonski","avatar":"/images/members/filip_jablonski.jpg","bio":"Senior iOS developer","name":"Filip Jabłoński","web":null}},{"frontmatter":{"author_id":"grzesiek","avatar":"/images/members/grzegorz_ciesla.jpg","bio":"Software Developer","name":"Grzegorz Cieśla","web":null}},{"frontmatter":{"author_id":"ivan","avatar":"/images/members/ivan.jpg","bio":"Fullstack developer","name":"Ivan Menshykov","web":null}},{"frontmatter":{"author_id":"janek","avatar":"/images/members/janhanc.jpg","bio":"Frontend developer","name":"Jan Hanc","web":null}},{"frontmatter":{"author_id":"kwysocki","avatar":"/images/members/kamil.png","bio":"Software Engineer @ Bright Inventions","name":"Kamil Wysocki","web":"https://wysockikamil.com"}},{"frontmatter":{"author_id":"karoln","avatar":"/images/members/karol_nadratowski.jpg","bio":null,"name":"Karol Nadratowski","web":null}},{"frontmatter":{"author_id":"karol r","avatar":"/images/members/karol_rinc.jpg","bio":"Backend developer","name":"Karol Rinc","web":null}},{"frontmatter":{"author_id":"kasia","avatar":"/images/members/kasia_lukasiewicz.jpg","bio":"Senior Project Manager","name":"Kasia Łukasiewicz","web":null}},{"frontmatter":{"author_id":"kasia g","avatar":"/images/members/katarzyna_galka.jpg","bio":"Project manager","name":"Katarzyna Gałka","web":null}},{"frontmatter":{"author_id":"krzysiek h","avatar":"/images/members/krzysztof_hinc.jpg","bio":"Web developer","name":"Krzysiek Hinc","web":null}},{"frontmatter":{"author_id":"krzysiek","avatar":"/images/members/krzysztof_kaczmarek.jpg","bio":"Senior iOS Developer","name":"Krzysztof Kaczmarek","web":null}},{"frontmatter":{"author_id":"maciej","avatar":"/images/members/maciej_seleman.jpg","bio":"QA Specialist","name":"Maciej Seleman","web":null}},{"frontmatter":{"author_id":"magda","avatar":"/images/members/magda_sadowska.jpg","bio":"Office & HR Assistant","name":"Magda Sadowska","web":null}},{"frontmatter":{"author_id":"maja","avatar":"/images/members/maja_puta.jpg","bio":"Junior QA Specialist","name":"Maja Puta","web":null}},{"frontmatter":{"author_id":"marcink","avatar":"/images/members/marcin_kwiatkowski.jpg","bio":null,"name":"Marcin Kwiatkowski","web":null}},{"frontmatter":{"author_id":"mateusz","avatar":"/images/members/mateusz_klimczak.jpg","bio":"Technical leader & Project manager","name":"Mateusz Klimczak","web":null}},{"frontmatter":{"author_id":"mateuszklimek","avatar":"/images/members/mateuszklimek.png","bio":"Software Engineer @ Bright Inventions","name":"Mateusz Klimek","web":null}},{"frontmatter":{"author_id":"michal k","avatar":"/images/members/michal_koszalka.jpg","bio":"Senior Backend developer","name":"Michał Koszałka","web":null}},{"frontmatter":{"author_id":"michał","avatar":"/images/members/michal_wrobel.jpg","bio":"Senior Backend Developer at Bright Inventions","name":"Michał Wróbel","web":null}},{"frontmatter":{"author_id":"michal","avatar":"/images/members/michał_łukasiewicz.jpg","bio":"Co-founder & Senior iOS developer","name":"Michał Łukasiewicz","web":null}},{"frontmatter":{"author_id":"monika","avatar":"/images/members/monika.jpg","bio":"Software Developer @ Bright Inventions","name":"Monika Niegrzybowska","web":null}},{"frontmatter":{"author_id":"nikodem","avatar":"/images/members/nikodem_kalinowski.jpg","bio":"Web developer","name":"Nikodem Kalinowski","web":null}},{"frontmatter":{"author_id":"patryk","avatar":"/images/members/patryk_huzarski.jpg","bio":"Software Developer @ Bright Inventions","name":"Patryk Huzarski","web":null}},{"frontmatter":{"author_id":"patryk sz","avatar":"/images/members/patryk_szlagowski.jpg","bio":"Senior Backend developer","name":"Patryk Szlagowski","web":null}},{"frontmatter":{"author_id":"paweł","avatar":"/images/members/paweł_gutkowski.jpg","bio":"Fullstack Developer at Bright Inventions ","name":"Paweł Gutkowski","web":null}},{"frontmatter":{"author_id":"pawel","avatar":"/images/members/paweł_papkiewicz.jpg","bio":"Fullstack developer","name":"Paweł Papkiewicz","web":null}},{"frontmatter":{"author_id":"piotr","avatar":"/images/members/piotr_mionskowski.jpg","bio":"TDD fan eager to learn new things","name":"Piotr Mionskowski","web":"https://miensol.pl"}},{"frontmatter":{"author_id":"piotr_l","avatar":"/images/members/piotrl.png","bio":"Android Developer @ Bright Inventions","name":"Piotr Łupiński","web":"http://exp.flamaster2.com"}},{"frontmatter":{"author_id":"radek","avatar":"/images/members/radek_pieczątkiewicz.jpg","bio":"Android developer","name":"Radek Pieczątkiewicz","web":null}},{"frontmatter":{"author_id":"radeks","avatar":"/images/members/radoslaw.jpg","bio":"Software Engineer @ Bright Inventions","name":"Radosław Słowiński","web":null}},{"frontmatter":{"author_id":"rafal h","avatar":"/images/members/rafal_hoffman.jpg","bio":"Fullstack developer","name":"Rafał Hofman","web":null}},{"frontmatter":{"author_id":"sebastian","avatar":"/images/members/sebastian_sobczak.jpg","bio":"Junior Account Manager at Bright Inventions ","name":"Sebastian Sobczak","web":null}},{"frontmatter":{"author_id":"szymek","avatar":"/images/members/szymon_miloch.jpg","bio":"Android & Web developer","name":"Szymon Miloch","web":null}},{"frontmatter":{"author_id":"tomek","avatar":"/images/members/tomek.jpeg","bio":null,"name":"Tomasz Gęsior","web":null}},{"frontmatter":{"author_id":"ula","avatar":"/images/members/ula_stankiewicz.jpg","bio":"HR & Marketing Manager","name":"Ula Stankiewicz","web":null}},{"frontmatter":{"author_id":"wojciech","avatar":"/images/members/wojciech_baczyński.jpg","bio":"Fullstack developer","name":"Wojciech Baczyński","web":null}},{"frontmatter":{"author_id":"lukasz","avatar":"/images/members/lukasz_reszetow.jpg","bio":"Android developer","name":"Łukasz Reszetow","web":null}}]},"site":{"siteMetadata":{"siteUrl":"https://brightinventions.pl"}}},"pageContext":{"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2017-11-01-call-apply-bind-methods-in-javascript.md"}}}
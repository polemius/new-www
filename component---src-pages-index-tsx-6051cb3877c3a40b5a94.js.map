{"version":3,"sources":["webpack:///./src/components/subcomponents/Date.tsx","webpack:///./src/components/home/ourServices/OurServices.module.scss","webpack:///./src/helpers/pathHelpers.ts","webpack:///./src/components/home/Header.tsx","webpack:///./src/components/home/Achievements.tsx","webpack:///./src/components/home/OurServices.tsx","webpack:///./src/components/shared/ImageSpacer.tsx","webpack:///./src/components/home/SuccessStoryBox.tsx","webpack:///./src/components/home/Projects.tsx","webpack:///./src/components/subcomponents/PopularBlogPostBox.tsx","webpack:///./src/components/home/PopularBlogPosts.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/home/Achievements.module.scss","webpack:///./src/models/creator.ts","webpack:///./src/components/home/Header.module.scss"],"names":["DateFormatter","updated","date","dateObject","Date","dateTime","toString","data-updated","itemProp","Intl","DateTimeFormat","year","month","day","format","module","exports","getJobPath","path","split","pop","replace","getFileNameOnly","deleteTimestampFromUrl","Header","className","classNames","styles","header","title","href","routeLinks","startProject","Achievements","createAuthors","elements","number","getFullYear","label","achievements","map","key","services","icon","WebDevelopmentIcon","description","MobileAppDevelopmentIcon","ProductDesignIcon","BlockchainIcon","OurServices","service","whatWeOffer","Container","styled","div","ImagesContainer","ImageContainer","Image","img","images","ImageSpacer","image","src","Title","h3","figure","SuccessStoryBox","props","onClick","window","location","slug","Projects","posts","allMarkdownRemark","edges","v","node","post","frontmatter","fields","projects","DetailsContainer","PopularBlogPostBoxContainer","DateContainer","TagsContainer","PopularBlogPostBox","to","url","tags","join","PopularBlogPosts","authors","nodes","author","find","author_id","name","authorId","avatar","readTime","timeToRead","id","blog","Page","Carousel","TechnologyTags","Ratings","Contact","createBlogPosts","data","excerpt","createProjects","filter","project","published","sort","a","b","order"],"mappings":"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","file":"component---src-pages-index-tsx-6051cb3877c3a40b5a94.js","sourcesContent":["import React from \"react\"\n\nconst DateFormatter: React.FC<{ updated?: boolean; date: string }> = ({\n  updated,\n  date,\n}) => {\n  const dateObject = new Date(date)\n  return (\n    <time\n      dateTime={date.toString()}\n      data-updated={updated && \"true\"}\n      itemProp=\"datePublished\"\n    >\n      {new Intl.DateTimeFormat(\"en-GB\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      }).format(dateObject)}\n    </time>\n  )\n}\n\nexport default DateFormatter\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"OurServices-module--title--1txTy\",\"service\":\"OurServices-module--service--rDyLz\",\"icon\":\"OurServices-module--icon--2TGck\"};","export const getUrlForAbsolutePath = (path: string) => {\n  return path.split(\"pages\").pop().replace(\".md\", \"\")\n}\n\nexport const getJobPath = (path: string) => {\n  return path.split('jobs').pop().replace('.md', '')\n}\n\nexport const getFileNameOnly = (path: string) => {\n  return path.split(\"/\").pop().replace(\".md\", \"\")\n}\n\nexport const deleteTimestampFromUrl = (path: string) => {\n  return path.replace(/([0-9]{4})-([0-9]{2})-([0-9]{2})-/, \"\")\n}\n","import React from 'react'\nimport classNames from 'classnames'\n\nimport { routeLinks } from '../../config/routing'\nimport { Section } from '../shared'\n\nimport styles from './Header.module.scss'\n\nexport const Header = () => {\n  return (\n    <Section className={classNames(styles.header)}>\n      <div className='hero-body'>\n        <div className='container'>\n          <div>\n            <h1 className={classNames('title mt-6', styles.title)}>\n              let's create software that <span>matters</span>\n            </h1>\n          </div>\n          <div className='buttons is-hidden-tablet'>\n            <a className='button estimate is-primary' href={routeLinks.startProject}>\n              <strong>estimate project</strong>\n            </a>\n          </div>\n        </div>\n      </div>\n    </Section>\n  )\n}\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nimport { createAuthors } from '../../models/creator'\nimport { GQLData } from '../../models/gql'\nimport { SectionBlack } from '../shared'\n\nimport styles from './Achievements.module.scss'\n\nexport const Achievements = () => {\n  const authors = createAuthors(useStaticQuery(GQL) as GQLData)\n\n  const elements = [\n    { number: (new Date()).getFullYear() - 2012, label: 'Years' },\n    { number: 53, label: 'Projects' },\n    { number: 40, label: 'Clients' },\n    { number: 59, label: 'Team' },\n    //{ number: authors.length, label: 'Team' }, --- @todo: should be uncommented after making all members\n  ]\n\n  return (\n    <SectionBlack className={styles.achievements}>\n      <div className='container'>\n        <div className='columns'>\n          {elements.map(({ number, label }) => (\n            <div className='column is-inline-block-mobile is-half-mobile' key={label}>\n              <div className={styles.number}>{number}</div>\n              <div className={styles.label}>{label}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </SectionBlack>\n  )\n}\n\nconst GQL = graphql`\n    query {\n      allMarkdownRemark(\n        filter: { frontmatter: { ex: { ne: true }, author_id: { ne: null } } }\n        sort: { fields: frontmatter___author_id }\n      ) {\n        nodes {\n          frontmatter {\n            avatar\n            author_id\n            name\n            short_name\n          }\n        }\n      }\n    }\n  `\n","import React from 'react'\nimport classNames from 'classnames'\n\nimport {MoreButton, Section, SectionTitle, TextTitle, TextRegular} from '../shared'\nimport BlockchainIcon from '../../assets/blockchain.svg'\nimport MobileAppDevelopmentIcon from '../../assets/mobileAppDevelopment.svg'\nimport ProductDesignIcon from '../../assets/productDesign.svg'\nimport WebDevelopmentIcon from '../../assets/webDevelopment.svg'\nimport { routeLinks } from '../../config/routing'\n\nimport styles from './ourServices/OurServices.module.scss'\n\nconst services = [\n  {\n    icon: WebDevelopmentIcon,\n    title: 'web development',\n    description: 'We provide a wide range of custom full stack web development services. We rely on a rich technology stack, including JavaScript, CSS, HTML, Java, Node.js, AWS, MySQL, PostgreSQL, and more.'\n  },\n  {\n    icon: MobileAppDevelopmentIcon,\n    title: 'mobile development',\n    description: 'We offer native mobile app development for iOS and Android. Our app development team has broad experience in building applications in Swift, Java, and Kotlin.'\n  },\n  {\n    icon: ProductDesignIcon,\n    title: 'product design',\n    description: 'You can count on our expertise in interface analysis, animation design, UX and UI design, root cause analysis, and more. We have worked on design projects of all sizes.'\n  },\n  {\n    icon: BlockchainIcon,\n    title: 'blockchain',\n    description: 'Our team has a vast experience in blockchain projects, including the development of a solution for a global humanitarian organization. Blockchain technology is what we’re really good at!'\n  },\n]\n\nexport const OurServices: React.FC = () => {\n  return (\n    <Section className='has-text-centered'>\n      <SectionTitle>our services</SectionTitle>\n      <div className='columns is-multiline has-justify-content-center'>\n        {services.map(service => (\n          <div className={classNames('column is-half', styles.service)}>\n            <div className={styles.icon}><service.icon /></div>\n            <TextTitle>{service.title}</TextTitle>\n            <TextRegular>{service.description}</TextRegular>\n          </div>\n        ))}\n      </div>\n      <MoreButton href={routeLinks.whatWeOffer}>learn more</MoreButton>\n    </Section>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  width: 100vw;\n  left: 0;\n  overflow: hidden;\n`\n\nconst ImagesContainer = styled.div`\n  width: 130%;\n  left: -15%;\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst ImageContainer = styled.div`\n  width: 25%;\n  height: 300px;\n  overflow: hidden;\n  margin: 10px;\n\n  @media (max-width: 768px) {\n    height: 100px;\n  }\n`\nconst Image = styled.img`\n  object-fit: cover;\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n`\n\nconst images = [\n  \"images/imagespacer/1.png\",\n  \"images/imagespacer/2.png\",\n  \"images/imagespacer/3.png\",\n  \"images/imagespacer/4.png\",\n]\n\nexport const ImageSpacer: React.FC = () => {\n  return (\n    <Container>\n      <ImagesContainer>\n        {images.map(image => (\n          <ImageContainer key={image}>\n            <Image src={image} />\n          </ImageContainer>\n        ))}\n      </ImagesContainer>\n    </Container>\n  )\n}\n","import React, { FC } from \"react\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  border: 1px solid #d3d3d3;\n  width: 100%;\n  max-width: 550px;\n  margin: 1rem;\n  padding: 2em;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  &:hover {\n    box-shadow: 15px 15px 40px -25px rgba(170, 170, 170, 1);\n  }\n  @media screen and (max-width: 767px) {\n      margin: 1rem 0;\n  }\n`\n\nconst Title = styled.h3`\n  text-align: center;\n  font-family: \"SuisseIntl Black\", sans-serif;\n  font-style: normal;\n  color: black;\n`\n\nconst Image = styled.figure`\n  margin-top: 1em;\n  height: 300px;\n\n  @media (max-width: 768px) {\n    height: 150px;\n  }\n\n  img {\n    height: 100%;\n    width: 100%;\n    object-fit: contain;\n  }\n`\n\nexport interface SuccessStoryBoxProps {\n  image: string\n  title: string\n  slug: string\n  className?: string\n}\n\nconst SuccessStoryBox: FC<SuccessStoryBoxProps> = props => {\n  return (\n    <Container onClick={() => (window.location.href = props.slug)} className={props.className}>\n      <Title>{props.title}</Title>\n      <Image className=\"image\">\n        <img src={props.image} />\n      </Image>\n    </Container>\n  )\n}\n\nexport default SuccessStoryBox\n","import { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\n\nimport { MoreButton, Section, SectionTitle } from '../shared'\nimport SuccessStoryBox from './SuccessStoryBox'\nimport { routeLinks } from '../../config/routing'\n\nexport const Projects: React.FC = () => {\n  const { allMarkdownRemark: { edges } } = useStaticQuery(GQL)\n  const posts: Array<{\n    frontmatter: {\n      image: string\n      layout: string\n      published: boolean | null\n      slug: string\n      title: string\n    }\n    fields: {\n      slug: string\n    }\n  }> = edges.map((v: any) => v.node)\n\n  return (\n    <Section>\n      <SectionTitle>success stories</SectionTitle>\n      <div className=\"columns is-multiline has-justify-content-center\">\n        {posts.map(post => (\n            <SuccessStoryBox\n              className=\"column is-6\"\n              key={'post' + post.frontmatter.title}\n              title={post.frontmatter.title}\n              image={post.frontmatter.image}\n              slug={post.fields.slug}\n            />\n        ))}\n      </div>\n      <MoreButton href={routeLinks.projects}>view more</MoreButton>\n    </Section>\n  )\n}\n\nconst GQL = graphql`\n  {\n      allMarkdownRemark(\n        filter: {\n          frontmatter: { layout: { eq: \"project\" }, published: { ne: false } }\n        }\n        limit: 6\n        sort: { order: ASC, fields: frontmatter___order }\n      ) {\n        edges {\n          node {\n            frontmatter {\n              title\n              image\n              layout\n              slug\n              published\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n`","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport DateFormatter from \"./Date\"\nimport { deleteTimestampFromUrl } from \"../../helpers/pathHelpers\"\n\nconst DetailsContainer = styled.div`\n  padding: 2em;\n`\n\nconst Image = styled.figure`\n  height: 300px;\n  border-bottom: 1px solid #d3d3d3;\n\n  @media (max-width: 480px) {\n    height: 200px;\n  }\n  img {\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n  }\n`\n\nconst PopularBlogPostBoxContainer = styled.div`\n  width: 100%;\n  height: 460px;\n  border: 1px solid #d3d3d3;\n  margin-bottom: 1em !important;\n  @media (max-width: 480px) {\n    height: auto;\n  }\n\n  &:hover {\n    box-shadow: 15px 15px 40px -25px rgba(170, 170, 170, 1);\n  }\n`\n\nconst DateContainer = styled.div`\n  font-size: 14px;\n  border-right: 1px solid black;\n  display: flex;\n  align-items: center;\n  padding-top: 0;\n  padding-bottom: 0;\n`\n\nconst TagsContainer = styled.div`\n  /* margin-bottom: 1em; */\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  padding-top: 0;\n  padding-bottom: 0;\n`\n\nconst Title = styled.div`\n  margin: 1em 0;\n  font-family: \"SuisseIntl Black\", sans-serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 22px;\n  /* letter-spacing: 1px; */\n`\n\nexport interface PopularBlogPostBoxProps {\n  author: string\n  authorId: string\n  avatar: string\n  readTime: number\n  date: string\n  tags: string[]\n  image: string\n  url: string\n  title: string\n}\n\nconst PopularBlogPostBox: React.FC<PopularBlogPostBoxProps> = props => {\n  return (\n    <PopularBlogPostBoxContainer>\n      <Link to={deleteTimestampFromUrl(props.url)}>\n        <Image className=\"image\">\n          <img src={props.image} />\n        </Image>\n      </Link>\n      <DetailsContainer>\n        <div className=\"columns is-mobile is-4 is-variable\">\n          <DateContainer className=\"column is-narrow\">\n            <DateFormatter date={props.date} />\n          </DateContainer>\n          <TagsContainer className=\"column\">\n            {props.tags.join(\", \")}\n            {/* {props.tags.map(tag => (\n              <Tag key={tag + Math.random()}>{tag}</Tag>\n            ))} */}\n          </TagsContainer>\n        </div>\n        <Title>{props.title}</Title>\n      </DetailsContainer>\n    </PopularBlogPostBoxContainer>\n  )\n}\n\nexport default PopularBlogPostBox\n","import { useStaticQuery, graphql } from \"gatsby\"\nimport React, { FC } from \"react\"\nimport styled from \"styled-components\"\nimport { MoreButton, Section, SectionTitle } from \"../shared\"\nimport PopularBlogPostBox from \"../subcomponents/PopularBlogPostBox\"\nimport { routeLinks } from '../../config/routing'\n\nexport interface PopularBlogPostsProps {}\n\nconst PopularBlogPosts: FC<PopularBlogPostsProps> = props => {\n  const {\n    posts: { edges: posts },\n    authors: { nodes: authors },\n  } = useStaticQuery(graphql`\n    query {\n      posts: allMarkdownRemark(\n        filter: {\n          frontmatter: {\n            layout: { eq: \"post\" }\n            published: { ne: false }\n            hidden: { ne: true }\n          }\n        }\n        sort: { fields: fileAbsolutePath, order: DESC }\n        limit: 4\n      ) {\n        edges {\n          post: node {\n            id\n            fileAbsolutePath\n            timeToRead\n            excerpt(pruneLength: 500)\n            frontmatter {\n              excerpt\n              comments\n              image\n              author\n              title\n              tags\n              date\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n      authors: allMarkdownRemark(\n        filter: { frontmatter: { author_id: { ne: null } } }\n      ) {\n        nodes {\n          author: frontmatter {\n            author_id\n            avatar\n            bio\n            name\n            web\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Section>\n      <SectionTitle className=\"is-size-3\">what’s new on our blog</SectionTitle>\n      <div className=\"columns is-multiline is-12\">\n        {posts.map(({ post }: any) => {\n          const { author } = authors.find(\n            ({ author }: any) => author.author_id === post.frontmatter.author\n          )\n          return (\n            <div className=\"column is-6\" key={post.frontmatter.title}>\n              <PopularBlogPostBox\n                author={author.name}\n                authorId={author.author_id}\n                avatar={author.avatar}\n                date={post.frontmatter.date}\n                tags={post.frontmatter.tags}\n                image={post.frontmatter.image}\n                readTime={post.timeToRead}\n                url={post.fields.slug}\n                title={post.frontmatter.title}\n                key={\"post\" + post.frontmatter.title}\n              >\n                {post.id}\n              </PopularBlogPostBox>\n            </div>\n          )\n        })}\n      </div>\n      <MoreButton href={routeLinks.blog}>read more</MoreButton>\n    </Section>\n  )\n}\n\nexport default PopularBlogPosts\n","import React from 'react'\n\nimport {Page} from '../layout/Page'\nimport {Header} from '../components/home/Header'\nimport {Achievements} from '../components/home/Achievements'\nimport {Carousel} from '../components/shared/Carousel'\nimport {TechnologyTags} from '../components/shared/TechnologyTags'\nimport {OurServices} from '../components/home/OurServices'\nimport {ImageSpacer} from '../components/shared/ImageSpacer'\nimport {Projects} from '../components/home/Projects'\nimport Ratings from '../components/shared/Ratings'\nimport {Contact} from '../components/shared/Contact'\nimport { HideTablet } from '../components/shared'\n\nimport PopularBlogPosts from '../components/home/PopularBlogPosts'\n\nimport '../styles/_page-index.scss'\nexport default () => {\n  return (\n    <Page className=\"page-index\">\n      <Header />\n      <Achievements />\n      <HideTablet>\n        <Carousel />\n      </HideTablet>\n      <TechnologyTags />\n      <OurServices />\n      <ImageSpacer />\n\n      <Projects />\n      <Ratings />\n\n      <PopularBlogPosts />{/* blog posts */}\n      <Contact />\n    </Page>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"achievements\":\"Achievements-module--achievements--1Wn6o\",\"number\":\"Achievements-module--number--3kcdU\",\"label\":\"Achievements-module--label--1_afd\"};","import { BlogPostModel, ProjectModel, GQLData, AuthorModel } from \"./gql\"\n\nexport const createBlogPosts = (data: GQLData): BlogPostModel[] => (\n  (data.allMarkdownRemark.edges || []).map(({ node }) => ({\n    ...node.frontmatter,\n    id: node.id,\n    slug: node.fields.slug,\n    excerpt: node.excerpt\n  } as BlogPostModel))\n)\n\nexport const createProjects = (data: GQLData): ProjectModel[] => (\n  (data.allMarkdownRemark.edges || [])\n    .map(({ node: { frontmatter } }: { node: { frontmatter: ProjectModel } }) => frontmatter)\n    .filter((project: ProjectModel) => project.published)\n    .sort((a: ProjectModel, b: ProjectModel) => (a.order || 99) - (b.order || 99))\n)\n\nexport const createAuthors = (data: GQLData): AuthorModel[] => (\n  (data.allMarkdownRemark.nodes || [])\n    .map(({ frontmatter }: { frontmatter: AuthorModel }) => frontmatter)\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header-module--header--RkvJ4\",\"title\":\"Header-module--title--2yHWy\"};"],"sourceRoot":""}